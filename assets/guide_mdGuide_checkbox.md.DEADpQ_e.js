import{p as n,C as h,c as g,o as x,af as d,G as a,w as t,a as l}from"./chunks/framework.B2AMlDzG.js";const f=JSON.parse('{"title":"Checkbox","description":"","frontmatter":{},"headers":[],"relativePath":"guide/mdGuide/checkbox.md","filePath":"guide/mdGuide/checkbox.md"}'),v={name:"guide/mdGuide/checkbox.md"},m=Object.assign(v,{setup(k){const u=n(["option1"]),c=n([]),i=n(["red"]),r=n(["mon"]);n(!1);const b=n([]);return n(["vue"]),(C,e)=>{const s=h("MYCheckbox"),p=h("MYCheckbox-group");return x(),g("div",null,[e[20]||(e[20]=d(`<h1 id="checkbox" tabindex="-1">Checkbox <a class="header-anchor" href="#checkbox" aria-label="Permalink to &quot;Checkbox&quot;">​</a></h1><h2 id="简易介绍" tabindex="-1">简易介绍 <a class="header-anchor" href="#简易介绍" aria-label="Permalink to &quot;简易介绍&quot;">​</a></h2><p>checkbox复选框，用于用户从多个选项中选择一个或多个。mengyue-components进行了封装并进行了vitest测试。<br> 实现复选框的标签有两种:<br><code>&lt;MYCheckbox /&gt;</code>或者<code>&lt;MYCheckbox&gt;&lt;/MYCheckbox&gt;</code><br><code>&lt;MYCheckbox-group /&gt;</code>或者<code>&lt;MYCheckbox-group&gt;&lt;/MYCheckbox-group&gt;</code>单选框组<br></p><h2 id="基础多选框组" tabindex="-1">基础多选框组 <a class="header-anchor" href="#基础多选框组" aria-label="Permalink to &quot;基础多选框组&quot;">​</a></h2><p>使用<code>&lt;MYCheckbox-group&gt;&lt;/MYCheckbox-group&gt;</code>可以将复选框分组。<br> 例如<code>selectedValues1</code>已经定义过了<code>const selectedValues1 = ref([&#39;option1&#39;])</code></p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>&lt;MYCheckbox-group v-model=&quot;selectedValues1&quot;&gt;</span></span>
<span class="line"><span>    &lt;MYCheckbox value=&quot;option1&quot;&gt;选项1&lt;/MYCheckbox&gt;</span></span>
<span class="line"><span>    &lt;MYCheckbox value=&quot;option2&quot;&gt;选项2&lt;/MYCheckbox&gt;</span></span>
<span class="line"><span>    &lt;MYCheckbox value=&quot;option3&quot;&gt;选项3&lt;/MYCheckbox&gt;</span></span>
<span class="line"><span>&lt;/MYCheckbox-group&gt;</span></span>
<span class="line"><span></span></span></code></pre></div>`,6)),a(p,{modelValue:u.value,"onUpdate:modelValue":e[0]||(e[0]=o=>u.value=o)},{default:t(()=>[a(s,{value:"option1"},{default:t(()=>[...e[5]||(e[5]=[l("选项1",-1)])]),_:1}),a(s,{value:"option2"},{default:t(()=>[...e[6]||(e[6]=[l("选项2",-1)])]),_:1}),a(s,{value:"option3"},{default:t(()=>[...e[7]||(e[7]=[l("选项3",-1)])]),_:1})]),_:1},8,["modelValue"]),e[21]||(e[21]=d(`<h2 id="垂直排列" tabindex="-1">垂直排列 <a class="header-anchor" href="#垂直排列" aria-label="Permalink to &quot;垂直排列&quot;">​</a></h2><p>使用<code>direction</code>将复选框垂直排列<br> 例如<code>selectedValues2</code>已经定义过了<code>const selectedValues2 = ref([])</code></p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>&lt;MYCheckbox-group v-model=&quot;selectedValues2&quot; direction=&quot;vertical&quot;&gt;</span></span>
<span class="line"><span>    &lt;MYCheckbox value=&quot;apple&quot;&gt;苹果&lt;/MYCheckbox&gt;</span></span>
<span class="line"><span>    &lt;MYCheckbox value=&quot;banana&quot;&gt;香蕉&lt;/MYCheckbox&gt;</span></span>
<span class="line"><span>    &lt;MYCheckbox value=&quot;orange&quot;&gt;橙子&lt;/MYCheckbox&gt;</span></span>
<span class="line"><span>&lt;/MYCheckbox-group&gt;</span></span>
<span class="line"><span></span></span></code></pre></div>`,3)),a(p,{modelValue:c.value,"onUpdate:modelValue":e[1]||(e[1]=o=>c.value=o),direction:"vertical"},{default:t(()=>[a(s,{value:"apple"},{default:t(()=>[...e[8]||(e[8]=[l("苹果",-1)])]),_:1}),a(s,{value:"banana"},{default:t(()=>[...e[9]||(e[9]=[l("香蕉",-1)])]),_:1}),a(s,{value:"orange"},{default:t(()=>[...e[10]||(e[10]=[l("橙子",-1)])]),_:1})]),_:1},8,["modelValue"]),e[22]||(e[22]=d(`<h2 id="关于禁用状态" tabindex="-1">关于禁用状态 <a class="header-anchor" href="#关于禁用状态" aria-label="Permalink to &quot;关于禁用状态&quot;">​</a></h2><p>使用<code>disabled</code>可以禁用复选框。<br> 例如<code>selectedValues3</code>已经定义过了<code>const selectedValues3 = ref([])</code></p><h3 id="整个组禁用" tabindex="-1">整个组禁用 <a class="header-anchor" href="#整个组禁用" aria-label="Permalink to &quot;整个组禁用&quot;">​</a></h3><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>&lt;MYCheckbox-group v-model=&quot;selectedValues3&quot; disabled&gt;</span></span>
<span class="line"><span>    &lt;MYCheckbox value=&quot;red&quot;&gt;红色&lt;/MYCheckbox&gt;</span></span>
<span class="line"><span>    &lt;MYCheckbox value=&quot;green&quot;&gt;绿色&lt;/MYCheckbox&gt;</span></span>
<span class="line"><span>    &lt;MYCheckbox value=&quot;blue&quot;&gt;蓝色&lt;/MYCheckbox&gt;</span></span>
<span class="line"><span>&lt;/MYCheckbox-group&gt;</span></span>
<span class="line"><span></span></span></code></pre></div>`,4)),a(p,{modelValue:i.value,"onUpdate:modelValue":e[2]||(e[2]=o=>i.value=o),disabled:""},{default:t(()=>[a(s,{value:"red"},{default:t(()=>[...e[11]||(e[11]=[l("红色",-1)])]),_:1}),a(s,{value:"green"},{default:t(()=>[...e[12]||(e[12]=[l("绿色",-1)])]),_:1}),a(s,{value:"blue"},{default:t(()=>[...e[13]||(e[13]=[l("蓝色",-1)])]),_:1})]),_:1},8,["modelValue"]),e[23]||(e[23]=d(`<h3 id="单个选项禁用" tabindex="-1">单个选项禁用 <a class="header-anchor" href="#单个选项禁用" aria-label="Permalink to &quot;单个选项禁用&quot;">​</a></h3><p>例如<code>selectedValues4</code>已经定义过了<code>const selectedValues4 = ref([])</code></p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>&lt;MYCheckbox-group v-model=&quot;selectedValues4&quot;&gt;</span></span>
<span class="line"><span>    &lt;MYCheckbox value=&quot;mon&quot;&gt;星期一&lt;/MYCheckbox&gt;</span></span>
<span class="line"><span>    &lt;MYCheckbox value=&quot;tue&quot; disabled&gt;星期二&lt;/MYCheckbox&gt;</span></span>
<span class="line"><span>    &lt;MYCheckbox value=&quot;wed&quot;&gt;星期三&lt;/MYCheckbox&gt;</span></span>
<span class="line"><span>&lt;/MYCheckbox-group&gt;</span></span>
<span class="line"><span></span></span></code></pre></div>`,3)),a(p,{modelValue:r.value,"onUpdate:modelValue":e[3]||(e[3]=o=>r.value=o)},{default:t(()=>[a(s,{value:"mon"},{default:t(()=>[...e[14]||(e[14]=[l("星期一",-1)])]),_:1}),a(s,{value:"tue",disabled:""},{default:t(()=>[...e[15]||(e[15]=[l("星期二",-1)])]),_:1}),a(s,{value:"wed"},{default:t(()=>[...e[16]||(e[16]=[l("星期三",-1)])]),_:1})]),_:1},8,["modelValue"]),e[24]||(e[24]=d(`<h2 id="自定义间隔" tabindex="-1">自定义间隔 <a class="header-anchor" href="#自定义间隔" aria-label="Permalink to &quot;自定义间隔&quot;">​</a></h2><p>例如<code>selectedValues5</code>已经定义过了<code>const selectedValues5 = ref([])</code></p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>&lt;MYCheckbox-group v-model=&quot;selectedValues5&quot; gap=&quot;72px&quot;&gt;</span></span>
<span class="line"><span>    &lt;MYCheckbox value=&quot;cat&quot;&gt;猫&lt;/MYCheckbox&gt;</span></span>
<span class="line"><span>    &lt;MYCheckbox value=&quot;dog&quot;&gt;狗&lt;/MYCheckbox&gt;</span></span>
<span class="line"><span>    &lt;MYCheckbox value=&quot;bird&quot;&gt;鸟&lt;/MYCheckbox&gt;</span></span>
<span class="line"><span>&lt;/MYCheckbox-group&gt;</span></span>
<span class="line"><span></span></span></code></pre></div>`,3)),a(p,{modelValue:b.value,"onUpdate:modelValue":e[4]||(e[4]=o=>b.value=o),gap:"72px"},{default:t(()=>[a(s,{value:"cat"},{default:t(()=>[...e[17]||(e[17]=[l("猫",-1)])]),_:1}),a(s,{value:"dog"},{default:t(()=>[...e[18]||(e[18]=[l("狗",-1)])]),_:1}),a(s,{value:"bird"},{default:t(()=>[...e[19]||(e[19]=[l("鸟",-1)])]),_:1})]),_:1},8,["modelValue"]),e[25]||(e[25]=d(`<h2 id="api-参考" tabindex="-1">API 参考 <a class="header-anchor" href="#api-参考" aria-label="Permalink to &quot;API 参考&quot;">​</a></h2><h3 id="checkboxgroup-props" tabindex="-1">CheckboxGroup Props <a class="header-anchor" href="#checkboxgroup-props" aria-label="Permalink to &quot;CheckboxGroup Props&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>direction</td><td>布局方向</td><td>string</td><td><code>vertical</code>/<code>horizontal</code></td><td><code>horizontal</code></td></tr><tr><td>value</td><td>复选框的值</td><td>string/number</td><td>—</td><td><code>required</code></td></tr><tr><td>disabled</td><td>是否禁用</td><td>boolean</td><td>—</td><td><code>false</code></td></tr></tbody></table><h3 id="checkbox-props" tabindex="-1">Checkbox Props <a class="header-anchor" href="#checkbox-props" aria-label="Permalink to &quot;Checkbox Props&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>value</td><td>复选框的值</td><td>string/number</td><td>—</td><td><code>required</code></td></tr><tr><td>disabled</td><td>是否禁用</td><td>boolean</td><td>—</td><td><code>false</code></td></tr></tbody></table><h3 id="类型定义" tabindex="-1">类型定义 <a class="header-anchor" href="#类型定义" aria-label="Permalink to &quot;类型定义&quot;">​</a></h3><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>interface CheckboxGroupProps {</span></span>
<span class="line"><span>    direction?: &#39;vertical&#39; | &#39;horizontal&#39;;</span></span>
<span class="line"><span>    value?: string | number;</span></span>
<span class="line"><span>    disabled?: boolean;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>interface CheckboxProps {</span></span>
<span class="line"><span>    value?: string | number;</span></span>
<span class="line"><span>    disabled?: boolean;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span></code></pre></div>`,7))])}}});export{f as __pageData,m as default};
