import{d as m,N as y,h as u,c as b,o as h,n as f,j as d,a1 as v,ap as _,r as k,ao as g,W as V,O as B}from"./framework.CnxbpgSG.js";const S={modelValue:{type:Boolean,default:!1},value:{type:[String,Number,Boolean],required:!0},disabled:{type:Boolean,default:!1},indeterminate:{type:Boolean,default:!1}},C={class:"my-checkbox__input"},G=["disabled","value"],$={class:"my-checkbox__label"},j=m({__name:"checkbox",props:S,emits:["update:modelValue","change"],setup(i,{emit:r}){const l=i,a=r,o=y("checkboxGroup",null),c=u(()=>!!o),s=u({get(){return c.value?o.modelValue.value.includes(l.value):!!l.modelValue},set(t){if(c.value){const e=[...o.modelValue.value],n=e.indexOf(l.value);t&&n===-1?e.push(l.value):!t&&n>-1&&e.splice(n,1),o.change(e),a("change",e)}else a("update:modelValue",t),a("change",t)}}),p=u(()=>c.value?!!o.disabled:!!l.disabled),x=u(()=>({"my-checkbox--checked":s.value,"my-checkbox--disabled":p.value}));return(t,e)=>(h(),b("label",{class:f(["my-checkbox",x.value])},[d("span",C,[v(d("input",{type:"checkbox",class:"my-checkbox__original","onUpdate:modelValue":e[0]||(e[0]=n=>s.value=n),disabled:p.value,value:t.value},null,8,G),[[_,s.value]]),e[1]||(e[1]=d("span",{class:"my-checkbox__inner"},null,-1))]),d("span",$,[k(t.$slots,"default")])],2))}}),z={modelValue:{type:Array,default:()=>[]},disabled:{type:Boolean,default:!1},direction:{type:String,default:"horizontal"},gap:{type:String,default:"12px"},checkStrictly:{type:Boolean,default:!1}},D=m({name:"MYCheckbox-group",__name:"checkbox-group",props:z,emits:["update:modelValue"],setup(i,{emit:r}){const l=r,a=i,{modelValue:o}=g(a),c=u(()=>({"--checkbox-group-gap":a.gap}));return V("checkboxGroup",{modelValue:o,disabled:a.disabled,change:s=>{l("update:modelValue",s)}}),(s,p)=>(h(),b("div",{class:f(["my-checkbox-group",[`is-${a.direction}`,{"is-disabled":a.disabled}]]),style:B(c.value)},[k(s.$slots,"default")],6))}});export{j as _,D as a};
