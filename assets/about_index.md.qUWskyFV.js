import{_ as t,c as d,o as e,ah as n}from"./chunks/framework.CnxbpgSG.js";const v=JSON.parse('{"title":"关于 Mengyue Components","description":"","frontmatter":{"layout":"home","title":"关于 Mengyue Components","hero":{"name":"Mengyue Components","tagline":"从 0 到 1，不是团队的力量，而是热爱与坚持的延伸。","actions":[{"theme":"brand","text":"开始探索 →","link":"/guide/intro"}]}},"headers":[],"relativePath":"about/index.md","filePath":"about/index.md"}'),o={name:"about/index.md"};function c(s,a,i,p,f,r){return e(),d("div",null,[...a[0]||(a[0]=[n('<section class="about-container" data-v-8dfc4284><h2 data-v-8dfc4284>💫 初衷</h2><p data-v-8dfc4284><strong data-v-8dfc4284>Mengyue Components</strong> 并没有团队、没有资金、也没有预设的路线图。 它只是一个由开发者个人出发的探索——一个想要「从零开始，亲手构建一套现代化组件体系」的过程。 </p><p data-v-8dfc4284> 每一个组件、每一个动画、每一行逻辑，都是在夜深人静的时间里，一点点打磨出来的。 从思考架构到设计交互，从样式细节到性能优化，所有的积累与尝试，都是自我成长的见证。 可能依然有一些组件不如意，都在不断的优化，逐渐完善每个组件的每个功能，api，等等。 </p><h2 data-v-8dfc4284>🧩 理念</h2><p data-v-8dfc4284> 组件库并非追求“炫技”，而是寻找一种优雅的平衡—— <em data-v-8dfc4284>让代码更具秩序、让交互更自然、让开发更轻盈。</em></p><p data-v-8dfc4284> 因此，在整个研发过程中，更多的时间被用来思考： <ul data-v-8dfc4284><li data-v-8dfc4284>如何让组件逻辑更加简洁、可复用？</li><li data-v-8dfc4284>如何让样式系统既灵活又统一？</li><li data-v-8dfc4284>如何让项目体积最小化、加载更迅速？</li><li data-v-8dfc4284>如何让组件的文档更易用？</li><li data-v-8dfc4284>每个人的需求都不一样，如何精简还通用?</li></ul></p><h2 data-v-8dfc4284>🚀 从 0 到 1</h2><p data-v-8dfc4284> 从最初的第一个按钮，到完整的构建系统与自动化发布流程， <strong data-v-8dfc4284>Mengyue Components</strong> 的每一处细节，都是一次实践与思考的结果。 </p><p data-v-8dfc4284> 没有团队分工，没有 UI 设计师，更没有测试组。 一切的设计、编码、文档、测试、打包与发布，全部由一个人独立完成。 这不仅是一场技术的探索，更是一次关于耐心、审美与热爱的旅程。 </p><h2 data-v-8dfc4284>🌈 愿景</h2><p data-v-8dfc4284> 当前可能还有很多不足和未完善的地方，在未来，<strong data-v-8dfc4284>Mengyue Components</strong> 仍将持续演进。 希望它能成为更多开发者学习、借鉴甚至共建的起点，在社区中生长、在经验中沉淀。 </p><p class="thanks" data-v-8dfc4284> 最后，感谢每一次点击与访问。 </p></section>',1)])])}const _=t(o,[["render",c],["__scopeId","data-v-8dfc4284"]]);export{v as __pageData,_ as default};
