import{p as o,_ as u,C as c,c as i,o as r,af as n,G as a,w as d}from"./chunks/framework.B2AMlDzG.js";o("");o("");o("");o("");o("B");const y=JSON.parse('{"title":"Select","description":"","frontmatter":{},"headers":[],"relativePath":"guide/mdGuide/select.md","filePath":"guide/mdGuide/select.md"}'),h={name:"guide/mdGuide/select.md"};function q(t,e,b,v,g,_){const l=c("MYOption"),p=c("MYSelect");return r(),i("div",null,[e[4]||(e[4]=n(`<h1 id="select" tabindex="-1">Select <a class="header-anchor" href="#select" aria-label="Permalink to &quot;Select&quot;">​</a></h1><h2 id="简易介绍" tabindex="-1">简易介绍 <a class="header-anchor" href="#简易介绍" aria-label="Permalink to &quot;简易介绍&quot;">​</a></h2><p>select选择器组件，用于用户从下拉列表中选择一个或多个选项。mengyue-components进行了封装并进行了vitest测试。<br> 实现选择器有两种标签 <code>&lt;MYSelect /&gt;</code>或者<code>&lt;MYSelect&gt;&lt;/MYSelect&gt;</code><code>&lt;MYOption /&gt;</code>或者<code>&lt;MYOption&gt;&lt;/MYOption&gt;</code></p><h2 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to &quot;基础用法&quot;">​</a></h2><p>使用<code>v-model</code>绑定选中的值。例如<code>selectedValue1</code>已经定义过了<code>const selectedValue1 = ref(&#39;&#39;)</code></p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>&lt;MYSelect v-model=&quot;selectedValue1&quot; placeholder=&quot;请选择水果&quot;&gt;</span></span>
<span class="line"><span>    &lt;MYOption value=&quot;apple&quot; label=&quot;苹果&quot; /&gt;</span></span>
<span class="line"><span>    &lt;MYOption value=&quot;banana&quot; label=&quot;香蕉&quot; /&gt;</span></span>
<span class="line"><span>    &lt;MYOption value=&quot;orange&quot; label=&quot;橙子&quot; /&gt;</span></span>
<span class="line"><span>&lt;/MYSelect&gt;</span></span>
<span class="line"><span></span></span></code></pre></div>`,6)),a(p,{modelValue:t.selectedValue1,"onUpdate:modelValue":e[0]||(e[0]=s=>t.selectedValue1=s),placeholder:"请选择水果"},{default:d(()=>[a(l,{value:"apple",label:"苹果"}),a(l,{value:"banana",label:"香蕉"}),a(l,{value:"orange",label:"橙子"})]),_:1},8,["modelValue"]),e[5]||(e[5]=n(`<h2 id="禁用状态" tabindex="-1">禁用状态 <a class="header-anchor" href="#禁用状态" aria-label="Permalink to &quot;禁用状态&quot;">​</a></h2><p>使用<code>disabled</code>属性可以禁用选择器。例如<code>selectedValue2</code>已经定义过了<code>const selectedValue2 = ref(&#39;&#39;)</code></p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>&lt;MYSelect v-model=&quot;selectedValue2&quot; disabled placeholder=&quot;禁用状态&quot;&gt;</span></span>
<span class="line"><span>    &lt;MYOption value=&quot;1&quot; label=&quot;选项1&quot; /&gt;</span></span>
<span class="line"><span>    &lt;MYOption value=&quot;2&quot; label=&quot;选项2&quot; /&gt;</span></span>
<span class="line"><span>    &lt;MYOption value=&quot;3&quot; label=&quot;选项3&quot; /&gt;</span></span>
<span class="line"><span>&lt;/MYSelect&gt;</span></span>
<span class="line"><span></span></span></code></pre></div>`,3)),a(p,{modelValue:t.selectedValue2,"onUpdate:modelValue":e[1]||(e[1]=s=>t.selectedValue2=s),disabled:"",placeholder:"禁用状态"},{default:d(()=>[a(l,{value:"1",label:"选项1"}),a(l,{value:"2",label:"选项2"}),a(l,{value:"3",label:"选项3"})]),_:1},8,["modelValue"]),e[6]||(e[6]=n(`<h3 id="禁用某个选项" tabindex="-1">禁用某个选项 <a class="header-anchor" href="#禁用某个选项" aria-label="Permalink to &quot;禁用某个选项&quot;">​</a></h3><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>&lt;MYSelect v-model=&quot;selectedValue2&quot;  placeholder=&quot;禁用状态&quot;&gt;</span></span>
<span class="line"><span>    &lt;MYOption value=&quot;1&quot; label=&quot;选项1&quot; /&gt;</span></span>
<span class="line"><span>    &lt;MYOption value=&quot;2&quot; label=&quot;选项2&quot; disabled /&gt;</span></span>
<span class="line"><span>    &lt;MYOption value=&quot;3&quot; label=&quot;选项3&quot; /&gt;</span></span>
<span class="line"><span>&lt;/MYSelect&gt;</span></span>
<span class="line"><span></span></span></code></pre></div>`,2)),a(p,{modelValue:t.selectedValue2,"onUpdate:modelValue":e[2]||(e[2]=s=>t.selectedValue2=s),placeholder:"禁用状态"},{default:d(()=>[a(l,{value:"1",label:"选项1"}),a(l,{value:"2",label:"选项2",disabled:""}),a(l,{value:"3",label:"选项3"})]),_:1},8,["modelValue"]),e[7]||(e[7]=n(`<h2 id="自定义尺寸" tabindex="-1">自定义尺寸 <a class="header-anchor" href="#自定义尺寸" aria-label="Permalink to &quot;自定义尺寸&quot;">​</a></h2><p>使用<code>width</code>和<code>height</code>属性可以自定义选择器的宽度和高度。例如<code>selectedValue3</code>已经定义过了<code>const selectedValue3 = ref(&#39;&#39;)</code></p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>&lt;MYSelect v-model=&quot;selectedValue3&quot; placeholder=&quot;宽300px高50px&quot; width=&quot;300px&quot; height=&quot;50px&quot;&gt;</span></span>
<span class="line"><span>    &lt;MYOption value=&quot;4&quot; label=&quot;选项4&quot; /&gt;</span></span>
<span class="line"><span>    &lt;MYOption value=&quot;5&quot; label=&quot;选项5&quot; /&gt;</span></span>
<span class="line"><span>    &lt;MYOption value=&quot;6&quot; label=&quot;选项6&quot; /&gt;</span></span>
<span class="line"><span>&lt;/MYSelect&gt;</span></span>
<span class="line"><span></span></span></code></pre></div>`,3)),a(p,{modelValue:t.selectedValue3,"onUpdate:modelValue":e[3]||(e[3]=s=>t.selectedValue3=s),placeholder:"宽300px高50px",width:"300px",height:"50px"},{default:d(()=>[a(l,{value:"4",label:"选项4"}),a(l,{value:"5",label:"选项5"}),a(l,{value:"6",label:"选项6"})]),_:1},8,["modelValue"]),e[8]||(e[8]=n(`<h2 id="api-参考" tabindex="-1">API 参考 <a class="header-anchor" href="#api-参考" aria-label="Permalink to &quot;API 参考&quot;">​</a></h2><h3 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-label="Permalink to &quot;Props&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>disabled</td><td>是否禁用</td><td>boolean</td><td>—</td><td><code>false</code></td></tr><tr><td>width</td><td>宽度</td><td>string | number</td><td>—</td><td><code>&#39;260px&#39;</code></td></tr><tr><td>height</td><td>高度</td><td>string | number</td><td>—</td><td><code>&#39;40px&#39;</code></td></tr></tbody></table><h3 id="props-1" tabindex="-1">Props <a class="header-anchor" href="#props-1" aria-label="Permalink to &quot;Props&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>disabled</td><td>是否禁用</td><td>boolean</td><td>—</td><td><code>false</code></td></tr></tbody></table><h3 id="类型定义" tabindex="-1">类型定义 <a class="header-anchor" href="#类型定义" aria-label="Permalink to &quot;类型定义&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span style="color:#81A1C1;">interface</span><span style="color:#8FBCBB;"> SelectProps</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  disabled</span><span style="color:#81A1C1;">?:</span><span style="color:#8FBCBB;"> boolean</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  width</span><span style="color:#81A1C1;">?:</span><span style="color:#8FBCBB;"> SelectSize</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  height</span><span style="color:#81A1C1;">?:</span><span style="color:#8FBCBB;"> SelectSize</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#81A1C1;">interface</span><span style="color:#8FBCBB;"> OptionProps</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  disabled</span><span style="color:#81A1C1;">?:</span><span style="color:#8FBCBB;"> boolean</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span>
<span class="line"></span></code></pre></div>`,7))])}const C=u(h,[["render",q]]);export{y as __pageData,C as default};
