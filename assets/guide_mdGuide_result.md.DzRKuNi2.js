import{_ as l,C as o,c as p,o as d,af as e,G as a,w as n,j as i,a as r}from"./chunks/framework.Dg2MLihl.js";const m=JSON.parse('{"title":"Result","description":"","frontmatter":{},"headers":[],"relativePath":"guide/mdGuide/result.md","filePath":"guide/mdGuide/result.md"}'),c={name:"guide/mdGuide/result.md"};function u(h,t,b,_,q,g){const s=o("MYResult");return d(),p("div",null,[t[2]||(t[2]=e(`<h1 id="result" tabindex="-1">Result <a class="header-anchor" href="#result" aria-label="Permalink to &quot;Result&quot;">​</a></h1><h2 id="简易介绍" tabindex="-1">简易介绍 <a class="header-anchor" href="#简易介绍" aria-label="Permalink to &quot;简易介绍&quot;">​</a></h2><p>result结果组件，用于展示操作结果的状态。mengyue-components进行了封装并进行了vitest测试。<br> 可以使用<code>&lt;MYResult&gt;&lt;/MYResult&gt;</code>来实现一个结果展示。</p><h2 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to &quot;基础用法&quot;">​</a></h2><p>使用<code>title</code>属性设置主标题，<code>subTitle</code>属性设置副标题。</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>&lt;MYResult title=&quot;操作成功&quot; subTitle=&quot;您的操作已成功完成&quot; /&gt;</span></span>
<span class="line"><span></span></span></code></pre></div>`,6)),a(s,{title:"操作成功",subTitle:"您的操作已成功完成"}),t[3]||(t[3]=e(`<h2 id="图标类型" tabindex="-1">图标类型 <a class="header-anchor" href="#图标类型" aria-label="Permalink to &quot;图标类型&quot;">​</a></h2><p>通过<code>icon</code>属性可以设置结果图标，可选值为<code>primary</code>、<code>success</code>、<code>warning</code>、<code>error</code>、<code>info</code>。</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>&lt;MYResult icon=&quot;primary&quot; title=&quot;操作成功&quot; /&gt;</span></span>
<span class="line"><span>&lt;MYResult icon=&quot;success&quot; title=&quot;操作成功&quot; /&gt;</span></span>
<span class="line"><span>&lt;MYResult icon=&quot;warning&quot; title=&quot;操作成功&quot; /&gt;</span></span>
<span class="line"><span>&lt;MYResult icon=&quot;error&quot; title=&quot;操作成功&quot; /&gt;</span></span>
<span class="line"><span>&lt;MYResult icon=&quot;info&quot; title=&quot;操作成功&quot; /&gt;</span></span>
<span class="line"><span></span></span></code></pre></div>`,3)),a(s,{icon:"primary",title:"操作成功"}),a(s,{icon:"success",title:"操作成功"}),a(s,{icon:"warning",title:"操作成功"}),a(s,{icon:"error",title:"操作成功"}),a(s,{icon:"info",title:"操作成功"}),t[4]||(t[4]=e(`<h2 id="插槽使用" tabindex="-1">插槽使用 <a class="header-anchor" href="#插槽使用" aria-label="Permalink to &quot;插槽使用&quot;">​</a></h2><ul><li><code>sub-title</code>：自定义副标题内容</li><li><code>extra</code>：额外内容区域</li></ul><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>&lt;MYResult title=&quot;操作成功&quot;&gt;</span></span>
<span class="line"><span>  &lt;template #sub-title&gt;</span></span>
<span class="line"><span>    自定义副标题内容</span></span>
<span class="line"><span>  &lt;/template&gt;</span></span>
<span class="line"><span>  &lt;template #extra&gt;</span></span>
<span class="line"><span>    &lt;button&gt;返回首页&lt;/button&gt;</span></span>
<span class="line"><span>  &lt;/template&gt;</span></span>
<span class="line"><span>&lt;/MYResult&gt;</span></span>
<span class="line"><span></span></span></code></pre></div>`,3)),a(s,{title:"操作成功"},{"sub-title":n(()=>t[0]||(t[0]=[r(" 自定义副标题内容 ",-1)])),extra:n(()=>t[1]||(t[1]=[i("button",null,"返回首页",-1)])),_:1}),t[5]||(t[5]=e(`<h2 id="api-参考" tabindex="-1">API 参考 <a class="header-anchor" href="#api-参考" aria-label="Permalink to &quot;API 参考&quot;">​</a></h2><h3 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-label="Permalink to &quot;Props&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>title</td><td>主标题</td><td>string</td><td>—</td><td><code>&#39;&#39;</code></td></tr><tr><td>subTitle</td><td>副标题</td><td>string</td><td>—</td><td><code>&#39;&#39;</code></td></tr><tr><td>icon</td><td>图标类型</td><td>string</td><td><code>primary</code>/<code>success</code>/<code>warning</code>/<code>error</code>/<code>info</code></td><td><code>info</code></td></tr></tbody></table><h3 id="插槽" tabindex="-1">插槽 <a class="header-anchor" href="#插槽" aria-label="Permalink to &quot;插槽&quot;">​</a></h3><table tabindex="0"><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>sub-title</td><td>自定义副标题内容</td></tr><tr><td>extra</td><td>额外内容区域</td></tr></tbody></table><h3 id="类型定义" tabindex="-1">类型定义 <a class="header-anchor" href="#类型定义" aria-label="Permalink to &quot;类型定义&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span style="color:#81A1C1;">interface</span><span style="color:#8FBCBB;"> ResultProps</span><span style="color:#D8DEE9FF;"> = </span><span style="color:#ECEFF4;">{</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  title</span><span style="color:#81A1C1;">:</span><span style="color:#8FBCBB;"> string</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  subTitle</span><span style="color:#81A1C1;">:</span><span style="color:#8FBCBB;"> string</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  icon</span><span style="color:#81A1C1;">?:</span><span style="color:#8FBCBB;"> IconType</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span><span style="color:#81A1C1;">;</span></span>
<span class="line"></span></code></pre></div>`,7))])}const C=l(c,[["render",u]]);export{m as __pageData,C as default};
