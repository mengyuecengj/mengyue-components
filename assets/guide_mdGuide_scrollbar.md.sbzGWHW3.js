import{_ as r,C as p,c as d,o as i,af as e,G as a,w as s,a as n}from"./chunks/framework.2Q75SVZZ.js";const y=JSON.parse('{"title":"Scrollbar","description":"","frontmatter":{},"headers":[],"relativePath":"guide/mdGuide/scrollbar.md","filePath":"guide/mdGuide/scrollbar.md"}'),c={name:"guide/mdGuide/scrollbar.md"};function u(h,t,b,g,_,C){const l=p("MYText"),o=p("MYScrollbar");return i(),d("div",null,[t[9]||(t[9]=e(`<h1 id="scrollbar" tabindex="-1">Scrollbar <a class="header-anchor" href="#scrollbar" aria-label="Permalink to &quot;Scrollbar&quot;">​</a></h1><h2 id="简易介绍" tabindex="-1">简易介绍 <a class="header-anchor" href="#简易介绍" aria-label="Permalink to &quot;简易介绍&quot;">​</a></h2><p>scrollbar 是一个滚动条组件，用于在内容超出容器时提供滚动功能。mengyue-components 对其进行了封装并进行了 vitest 测试。<br> 可以使用 <code>&lt;MYScrollbar&gt;&lt;/MYScrollbar&gt;</code> 或者 <code>&lt;MYScrollbar /&gt;</code> 来实现一个滚动条。</p><h2 id="关于局部滚动条的使用" tabindex="-1">关于局部滚动条的使用 <a class="header-anchor" href="#关于局部滚动条的使用" aria-label="Permalink to &quot;关于局部滚动条的使用&quot;">​</a></h2><h3 id="横向和纵向都有滚动条" tabindex="-1">横向和纵向都有滚动条 <a class="header-anchor" href="#横向和纵向都有滚动条" aria-label="Permalink to &quot;横向和纵向都有滚动条&quot;">​</a></h3><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>&lt;MYScrollbar widthX ScrollWidth=&quot;20px&quot; corner&gt;</span></span>
<span class="line"><span>    &lt;MYText size=&quot;30rem&quot;&gt;11111111111111111111111111111&lt;/MYText&gt;</span></span>
<span class="line"><span>&lt;/MYScrollbar&gt;</span></span>
<span class="line"><span></span></span></code></pre></div>`,6)),a(o,{widthX:"",ScrollWidth:"20px",corner:""},{default:s(()=>[a(l,{size:"30rem"},{default:s(()=>t[0]||(t[0]=[n("11111111111111111111111111111",-1)])),_:1,__:[0]})]),_:1}),t[10]||(t[10]=e(`<h3 id="纵向滚动条的颜色" tabindex="-1">纵向滚动条的颜色 <a class="header-anchor" href="#纵向滚动条的颜色" aria-label="Permalink to &quot;纵向滚动条的颜色&quot;">​</a></h3><p>改变滚动条的滑块，滑轨，鼠标点击或者触碰滑块时的颜色</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>&lt;MYScrollbar height=&quot;500px&quot; thumbColor=&quot;#ff0000&quot; thumbHoverColor=&quot;#2c2&quot; trackColor=&quot;#797&quot;&gt;</span></span>
<span class="line"><span>        &lt;MYText size=&quot;30rem&quot;&gt;111&lt;/MYText&gt;</span></span>
<span class="line"><span>        &lt;MYText size=&quot;30rem&quot;&gt;111&lt;/MYText&gt;</span></span>
<span class="line"><span>&lt;/MYScrollbar&gt;</span></span>
<span class="line"><span></span></span></code></pre></div>`,3)),a(o,{height:"500px",thumbColor:"#ff0000",thumbHoverColor:"#2c2",trackColor:"#797"},{default:s(()=>[a(l,{size:"30rem"},{default:s(()=>t[1]||(t[1]=[n("111",-1)])),_:1,__:[1]}),a(l,{size:"30rem"},{default:s(()=>t[2]||(t[2]=[n("111",-1)])),_:1,__:[2]})]),_:1}),t[11]||(t[11]=e(`<h3 id="取消滚动条禁止滚动" tabindex="-1">取消滚动条禁止滚动 <a class="header-anchor" href="#取消滚动条禁止滚动" aria-label="Permalink to &quot;取消滚动条禁止滚动&quot;">​</a></h3><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>&lt;MYScrollbar height=&quot;500px&quot; Maxheight=&quot;800px&quot; disabledScroll&gt;</span></span>
<span class="line"><span>    &lt;MYText size=&quot;30rem&quot;&gt;222&lt;/MYText&gt;</span></span>
<span class="line"><span>    &lt;MYText size=&quot;30rem&quot;&gt;222&lt;/MYText&gt;</span></span>
<span class="line"><span>&lt;/MYScrollbar&gt;</span></span>
<span class="line"><span></span></span></code></pre></div>`,2)),a(o,{height:"500px",Maxheight:"800px",disabledScroll:""},{default:s(()=>[a(l,{size:"30rem"},{default:s(()=>t[3]||(t[3]=[n("222",-1)])),_:1,__:[3]}),a(l,{size:"30rem"},{default:s(()=>t[4]||(t[4]=[n("222",-1)])),_:1,__:[4]})]),_:1}),t[12]||(t[12]=e(`<h3 id="设置最大高度为800px" tabindex="-1">设置最大高度为800px <a class="header-anchor" href="#设置最大高度为800px" aria-label="Permalink to &quot;设置最大高度为800px&quot;">​</a></h3><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>&lt;MYScrollbar height=&quot;500px&quot; Maxheight=&quot;800px&quot;&gt;</span></span>
<span class="line"><span>    &lt;MYText size=&quot;30rem&quot;&gt;333&lt;/MYText&gt;</span></span>
<span class="line"><span>    &lt;MYText size=&quot;30rem&quot;&gt;333&lt;/MYText&gt;</span></span>
<span class="line"><span>&lt;/MYScrollbar&gt;</span></span>
<span class="line"><span></span></span></code></pre></div>`,2)),a(o,{height:"500px",Maxheight:"800px"},{default:s(()=>[a(l,{size:"30rem"},{default:s(()=>t[5]||(t[5]=[n("333",-1)])),_:1,__:[5]}),a(l,{size:"30rem"},{default:s(()=>t[6]||(t[6]=[n("333",-1)])),_:1,__:[6]})]),_:1}),t[13]||(t[13]=e(`<h3 id="组合使用" tabindex="-1">组合使用 <a class="header-anchor" href="#组合使用" aria-label="Permalink to &quot;组合使用&quot;">​</a></h3><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>&lt;MYScrollbar height=&quot;600px&quot; Maxheight=&quot;1000px&quot; thumbColor=&quot;#fff&quot; thumbHoverColor=&quot;#191919&quot; trackColor=&quot;#2c2&quot; &gt;</span></span>
<span class="line"><span>    &lt;MYText size=&quot;30rem&quot;&gt;444&lt;/MYText&gt;</span></span>
<span class="line"><span>    &lt;MYText size=&quot;30rem&quot;&gt;444&lt;/MYText&gt;</span></span>
<span class="line"><span>&lt;/MYScrollbar&gt;</span></span>
<span class="line"><span></span></span></code></pre></div>`,2)),a(o,{height:"600px",Maxheight:"1000px",thumbColor:"#fff",thumbHoverColor:"#191919",trackColor:"#2c2"},{default:s(()=>[a(l,{size:"30rem"},{default:s(()=>t[7]||(t[7]=[n("444",-1)])),_:1,__:[7]}),a(l,{size:"30rem"},{default:s(()=>t[8]||(t[8]=[n("444",-1)])),_:1,__:[8]})]),_:1}),t[14]||(t[14]=e(`<h2 id="api-参考" tabindex="-1">API 参考 <a class="header-anchor" href="#api-参考" aria-label="Permalink to &quot;API 参考&quot;">​</a></h2><h3 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-label="Permalink to &quot;Props&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>height</td><td>滚动条高度</td><td>string</td><td>px/em/rem/动态</td><td>—</td></tr><tr><td>maxHeight</td><td>滚动条最大高度</td><td>string</td><td>px/em/rem/动态</td><td>—</td></tr><tr><td>ScrollWidth</td><td>滚动条宽度</td><td>—</td><td>string</td><td>px/em/rem/动态</td></tr><tr><td>widthX</td><td>是否启用水平滚动条</td><td>boolean</td><td>—</td><td><code>false</code></td></tr><tr><td>thumbColor</td><td>滑块颜色</td><td>string</td><td>支持16进制颜色或单词颜色</td><td>—</td></tr><tr><td>thumbHoverColor</td><td>滑块悬停颜色</td><td>string</td><td>支持16进制颜色或单词颜色</td><td>—</td></tr><tr><td>trackColor</td><td>轨道颜色</td><td>string</td><td>支持16进制颜色或单词颜色</td><td>—</td></tr><tr><td>disabledHeight</td><td>禁用垂直滚动条</td><td>boolean</td><td>—</td><td><code>false</code></td></tr><tr><td>disabledWidth</td><td>禁用水平滚动条</td><td>boolean</td><td>—</td><td><code>false</code></td></tr><tr><td>disabledScroll</td><td>禁用滚动功能</td><td>boolean</td><td>—</td><td><code>false</code></td></tr><tr><td>corner</td><td>启用横向和纵向滚动条时边缘是否连接</td><td>boolean</td><td>—</td><td><code>false</code></td></tr><tr><td>tag</td><td>容器标签</td><td>string</td><td>支持所有 HTML 标签</td><td><code>div</code></td></tr></tbody></table><h3 id="类型定义" tabindex="-1">类型定义 <a class="header-anchor" href="#类型定义" aria-label="Permalink to &quot;类型定义&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span style="color:#81A1C1;">interface</span><span style="color:#8FBCBB;"> ScrollbarProps</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  height</span><span style="color:#81A1C1;">?:</span><span style="color:#8FBCBB;"> string</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  maxHeight</span><span style="color:#81A1C1;">?:</span><span style="color:#8FBCBB;"> string</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  ScrollWidth</span><span style="color:#81A1C1;">?:</span><span style="color:#8FBCBB;"> string</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  widthX</span><span style="color:#81A1C1;">?:</span><span style="color:#8FBCBB;"> boolean</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  thumbColor</span><span style="color:#81A1C1;">?:</span><span style="color:#8FBCBB;"> string</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  thumbHoverColor</span><span style="color:#81A1C1;">?:</span><span style="color:#8FBCBB;"> string</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  trackColor</span><span style="color:#81A1C1;">?:</span><span style="color:#8FBCBB;"> string</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  disabledHeight</span><span style="color:#81A1C1;">?:</span><span style="color:#8FBCBB;"> boolean</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  disabledWidth</span><span style="color:#81A1C1;">?:</span><span style="color:#8FBCBB;"> boolean</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  disabledScroll</span><span style="color:#81A1C1;">?:</span><span style="color:#8FBCBB;"> boolean</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  corner</span><span style="color:#81A1C1;">?:</span><span style="color:#8FBCBB;"> boolean</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  tag</span><span style="color:#81A1C1;">?:</span><span style="color:#8FBCBB;"> string</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span>
<span class="line"></span></code></pre></div>`,5))])}const m=r(c,[["render",u]]);export{y as __pageData,m as default};
