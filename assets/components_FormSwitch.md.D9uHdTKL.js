import{_ as i}from"./chunks/switch.vue_vue_type_script_setup_true_lang.BzrzDk1D.js";import{x as s,z as A,I as B,c as P,o as M,ah as x,J as t,j as a,w as n,a as d}from"./chunks/framework.BWIYv-lY.js";import"./chunks/useClassComputed.D3OyU7_1.js";import"./chunks/useStyleComputed.DYexXzp7.js";const D={style:{display:"flex","flex-direction":"column",gap:"15px","align-items":"flex-start"}},C={style:{display:"flex",gap:"20px"}},N=JSON.parse('{"title":"Switch","description":"","frontmatter":{},"headers":[],"relativePath":"components/FormSwitch.md","filePath":"components/FormSwitch.md"}'),Y={name:"components/FormSwitch.md"},X=Object.assign(Y,{setup(T){const r=s(!0),p=s(!0),h=s(!1),u=s(!1),m=s(!1),k=s(!0),b=s(!1),g=s(!0),c=s(!1),v=s(!0),V=s(!1),y=s(!0),f=s(!0),S=s(!0),w=s(!1),z=s(!0);return A([r,p,h,u,m,k,b,g,c,v,V,y,f,S,w,z],()=>{orceUpdate()}),(U,e)=>{const o=B("ShowCode");return M(),P("div",null,[e[13]||(e[13]=x('<h1 id="switch" tabindex="-1">Switch <a class="header-anchor" href="#switch" aria-label="Permalink to “Switch”">​</a></h1><h2 id="简易介绍" tabindex="-1">简易介绍 <a class="header-anchor" href="#简易介绍" aria-label="Permalink to “简易介绍”">​</a></h2><p>switch 开关，用于用户在两种状态之间切换。mengyue-components 进行了封装并进行了 vitest 测试。 可以使用 <code>&lt;MYSwitch&gt;&lt;/MYSwitch&gt;</code> 或者 <code>&lt;MYSwitch /&gt;</code> 来实现一个开关。</p><h2 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to “基础用法”">​</a></h2><p>使用 <code>v-model</code> 绑定开关的状态。</p>',5)),t(o,{title:"代码演示",code:`
<template>
  <MYSwitch v-model='value1' />
</template>
  `.trim()},{demo:n(()=>[a("div",null,[t(i,{modelValue:r.value,"onUpdate:modelValue":e[0]||(e[0]=l=>r.value=l)},null,8,["modelValue"])])]),_:1},8,["code"]),e[14]||(e[14]=a("h2",{id:"带文本的-switch",tabindex:"-1"},[d("带文本的 Switch "),a("a",{class:"header-anchor",href:"#带文本的-switch","aria-label":"Permalink to “带文本的 Switch”"},"​")],-1)),e[15]||(e[15]=a("p",null,[d("使用 "),a("code",null,"text"),d(" 可以定义开关状态下的文本。")],-1)),t(o,{title:"代码演示",code:`
<template>
  <MYSwitch v-model='value2' text='T' />
</template>
  `.trim()},{demo:n(()=>[a("div",null,[t(i,{modelValue:p.value,"onUpdate:modelValue":e[1]||(e[1]=l=>p.value=l),text:"T"},null,8,["modelValue"])])]),_:1},8,["code"]),e[16]||(e[16]=a("h2",{id:"自定义文本内容",tabindex:"-1"},[d("自定义文本内容 "),a("a",{class:"header-anchor",href:"#自定义文本内容","aria-label":"Permalink to “自定义文本内容”"},"​")],-1)),e[17]||(e[17]=a("p",null,"使用插槽来自定义开关的文本内容。",-1)),t(o,{title:"代码演示",code:`
<template>
  <MYSwitch v-model='slotValue'>
    自定义文本
  </MYSwitch>
</template>
  `.trim()},{demo:n(()=>[a("div",null,[t(i,{modelValue:h.value,"onUpdate:modelValue":e[2]||(e[2]=l=>h.value=l)},{default:n(()=>[...e[12]||(e[12]=[d(" 自定义文本 ",-1)])]),_:1},8,["modelValue"])])]),_:1},8,["code"]),e[18]||(e[18]=a("h2",{id:"关于尺寸",tabindex:"-1"},[d("关于尺寸 "),a("a",{class:"header-anchor",href:"#关于尺寸","aria-label":"Permalink to “关于尺寸”"},"​")],-1)),e[19]||(e[19]=a("p",null,[d("使用 "),a("code",null,"size"),d(" 定义尺寸，可以使用 mengyue-components 提供的多种尺寸。")],-1)),t(o,{title:"代码演示",code:`
<template>
  <div style='display: flex; flex-direction: column; gap: 15px; align-items: flex-start;'>
    <MYSwitch v-model='sizeMini' size='mini' text='S' />
    <MYSwitch v-model='sizeSupersmall' size='supersmall' text='S' />
    <MYSwitch v-model='sizeSmall' size='small' text='M' />
    <MYSwitch v-model='sizeMedium' size='medium' text='L' />
    <MYSwitch v-model='sizeLarge' size='large' text='XL' />
    <MYSwitch v-model='sizeBiglarge' size='biglarge' text='XL' />
    <MYSwitch v-model='sizeSuperlarge' size='superlarge' text='XL' />
  </div>
</template>
  `.trim()},{demo:n(()=>[a("div",D,[t(i,{modelValue:u.value,"onUpdate:modelValue":e[3]||(e[3]=l=>u.value=l),size:"mini",text:"S"},null,8,["modelValue"]),t(i,{modelValue:m.value,"onUpdate:modelValue":e[4]||(e[4]=l=>m.value=l),size:"supersmall",text:"S"},null,8,["modelValue"]),t(i,{modelValue:k.value,"onUpdate:modelValue":e[5]||(e[5]=l=>k.value=l),size:"small",text:"M"},null,8,["modelValue"]),t(i,{modelValue:b.value,"onUpdate:modelValue":e[6]||(e[6]=l=>b.value=l),size:"medium",text:"L"},null,8,["modelValue"]),t(i,{modelValue:g.value,"onUpdate:modelValue":e[7]||(e[7]=l=>g.value=l),size:"large",text:"XL"},null,8,["modelValue"]),t(i,{modelValue:c.value,"onUpdate:modelValue":e[8]||(e[8]=l=>c.value=l),size:"biglarge",text:"XL"},null,8,["modelValue"]),t(i,{modelValue:v.value,"onUpdate:modelValue":e[9]||(e[9]=l=>v.value=l),size:"superlarge",text:"XL"},null,8,["modelValue"])])]),_:1},8,["code"]),e[20]||(e[20]=a("h2",{id:"关于禁用状态",tabindex:"-1"},[d("关于禁用状态 "),a("a",{class:"header-anchor",href:"#关于禁用状态","aria-label":"Permalink to “关于禁用状态”"},"​")],-1)),e[21]||(e[21]=a("h3",{id:"禁用开关",tabindex:"-1"},[d("禁用开关 "),a("a",{class:"header-anchor",href:"#禁用开关","aria-label":"Permalink to “禁用开关”"},"​")],-1)),e[22]||(e[22]=a("p",null,[d("使用 "),a("code",null,"disabled"),d(" 可以禁用开关。")],-1)),t(o,{title:"代码演示",code:`
<template>
  <div style='display: flex; gap: 20px;'>
    <MYSwitch v-model='disabledValue1' disabled />
    <MYSwitch v-model='disabledValue2' disabled :modelValue='true' />
  </div>
</template>
  `.trim()},{demo:n(()=>[a("div",C,[t(i,{modelValue:V.value,"onUpdate:modelValue":e[10]||(e[10]=l=>V.value=l),disabled:""},null,8,["modelValue"]),t(i,{modelValue:y.value,"onUpdate:modelValue":e[11]||(e[11]=l=>y.value=l),disabled:""},null,8,["modelValue"])])]),_:1},8,["code"]),e[23]||(e[23]=x(`<h2 id="api-参考" tabindex="-1">API 参考 <a class="header-anchor" href="#api-参考" aria-label="Permalink to “API 参考”">​</a></h2><h3 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-label="Permalink to “Props”">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>modelValue</td><td>开关状态值</td><td>boolean</td><td>—</td><td><code>false</code></td></tr><tr><td>value</td><td>自定义值</td><td>boolean | string | number</td><td>—</td><td><code>false</code></td></tr><tr><td>size</td><td>尺寸</td><td>string</td><td><code>mini</code>/<code>supersmall</code>/<code>small</code>/<code>medium</code>/<code>large</code>/<code>biglarge</code>/<code>superlarge</code></td><td>—</td></tr><tr><td>text</td><td>文本</td><td>string</td><td>—</td><td>—</td></tr><tr><td>disabled</td><td>禁用</td><td>boolean</td><td>—</td><td><code>false</code></td></tr></tbody></table><h3 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-label="Permalink to “事件”">​</a></h3><table tabindex="0"><thead><tr><th>事件名</th><th>说明</th><th>参数</th></tr></thead><tbody><tr><td>update:modelValue</td><td>状态变化时触发</td><td>(value: boolean)</td></tr></tbody></table><h3 id="类型定义" tabindex="-1">类型定义 <a class="header-anchor" href="#类型定义" aria-label="Permalink to “类型定义”">​</a></h3><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes vitesse-light vitesse-dark" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">interface</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> SwitchProps</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  modelValue</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">?</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: </span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">boolean</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  value</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">?</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: </span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">boolean</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> | </span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">string</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> | </span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">number</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  size</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">?</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: </span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">string</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  text</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">?</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: </span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">string</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  disabled</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">?</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: </span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">boolean</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div>`,7))])}}});export{N as __pageData,X as default};
