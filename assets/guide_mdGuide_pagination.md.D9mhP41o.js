import{p as l,C as r,c as u,o as g,af as p,G as d,j as s}from"./chunks/framework.B2AMlDzG.js";const c={class:"example-pagination-block"},m={class:"example-pagination-block"},h=JSON.parse('{"title":"Pagination","description":"","frontmatter":{},"headers":[],"relativePath":"guide/mdGuide/pagination.md","filePath":"guide/mdGuide/pagination.md"}'),v={name:"guide/mdGuide/pagination.md"},q=Object.assign(v,{setup(b){const n=l(1),e=l(10);return(i,a)=>{const o=r("MYPagination");return g(),u("div",null,[a[8]||(a[8]=p(`<h1 id="pagination" tabindex="-1">Pagination <a class="header-anchor" href="#pagination" aria-label="Permalink to &quot;Pagination&quot;">​</a></h1><h2 id="简易介绍" tabindex="-1">简易介绍 <a class="header-anchor" href="#简易介绍" aria-label="Permalink to &quot;简易介绍&quot;">​</a></h2><p>Pagination 分页组件，用于数据分页展示，提升用户体验。mengyue-components 进行了封装并进行了 vitest 测试。<br> 可以使用 <code>&lt;MYPagination&gt;&lt;/MYPagination&gt;</code> 或者 <code>&lt;MYPagination /&gt;</code> 来实现一个分页组件。</p><h2 id="基础分页器" tabindex="-1">基础分页器 <a class="header-anchor" href="#基础分页器" aria-label="Permalink to &quot;基础分页器&quot;">​</a></h2><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>&lt;MYPagination v-model:current-page=&quot;currentPage&quot; v-model:page-size=&quot;pageSize&quot; layout=&quot;prev, pager, next&quot; :total=&quot;50&quot; /&gt;</span></span>
<span class="line"><span>&lt;script setup&gt;</span></span>
<span class="line"><span>import { ref } from &#39;vue&#39;;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>const currentPage = ref(1);</span></span>
<span class="line"><span>const pageSize = ref(10);</span></span>
<span class="line"><span>&lt;/script&gt;</span></span>
<span class="line"><span></span></span></code></pre></div>`,5)),d(o,{"current-page":n.value,"onUpdate:currentPage":a[0]||(a[0]=t=>n.value=t),"page-size":e.value,"onUpdate:pageSize":a[1]||(a[1]=t=>e.value=t),layout:"prev, pager, next",total:50},null,8,["current-page","page-size"]),a[9]||(a[9]=p(`<h3 id="省略分页" tabindex="-1">省略分页 <a class="header-anchor" href="#省略分页" aria-label="Permalink to &quot;省略分页&quot;">​</a></h3><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>&lt;div class=&quot;example-pagination-block&quot;&gt;</span></span>
<span class="line"><span>  &lt;div class=&quot;example-demonstration&quot;&gt;With Background and Sizes&lt;/div&gt;</span></span>
<span class="line"><span>    &lt;MYPagination v-model:current-page=&quot;currentPage&quot; v-model:page-size=&quot;pageSize&quot; layout=&quot;sizes, prev, pager, next, jumper, total&quot;</span></span>
<span class="line"><span>      :total=&quot;1000&quot; :page-sizes=&quot;[10, 20, 50, 100]&quot; background @change=&quot;handleChange&quot; /&gt;</span></span>
<span class="line"><span>  &lt;/div&gt;</span></span>
<span class="line"><span>  &lt;div class=&quot;example-pagination-block&quot;&gt;</span></span>
<span class="line"><span>    &lt;div class=&quot;example-demonstration&quot;&gt;Small Pagination, Hide on Single Page&lt;/div&gt;</span></span>
<span class="line"><span>    &lt;MYPagination v-model:current-page=&quot;currentPage&quot; v-model:page-size=&quot;pageSize&quot; layout=&quot;prev, pager, next&quot; :total=&quot;10&quot; small</span></span>
<span class="line"><span>      hide-on-single-page /&gt;</span></span>
<span class="line"><span>  &lt;/div&gt;</span></span>
<span class="line"><span></span></span></code></pre></div>`,2)),s("div",c,[a[6]||(a[6]=s("div",{class:"example-demonstration"},"With Background and Sizes",-1)),d(o,{"current-page":n.value,"onUpdate:currentPage":a[2]||(a[2]=t=>n.value=t),"page-size":e.value,"onUpdate:pageSize":a[3]||(a[3]=t=>e.value=t),layout:"sizes, prev, pager, next, jumper, total",total:1e3,"page-sizes":[10,20,50,100],background:"",onChange:i.handleChange},null,8,["current-page","page-size","onChange"])]),s("div",m,[a[7]||(a[7]=s("div",{class:"example-demonstration"},"Small Pagination, Hide on Single Page",-1)),d(o,{"current-page":n.value,"onUpdate:currentPage":a[4]||(a[4]=t=>n.value=t),"page-size":e.value,"onUpdate:pageSize":a[5]||(a[5]=t=>e.value=t),layout:"prev, pager, next",total:10,small:"","hide-on-single-page":""},null,8,["current-page","page-size"])]),a[10]||(a[10]=p(`<h2 id="api-参考" tabindex="-1">API 参考 <a class="header-anchor" href="#api-参考" aria-label="Permalink to &quot;API 参考&quot;">​</a></h2><h3 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-label="Permalink to &quot;Props&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>total</td><td>总数据条数</td><td>number</td><td>—</td><td><code>0</code></td></tr><tr><td>pageSize</td><td>每页显示条数</td><td>number</td><td>—</td><td><code>10</code></td></tr><tr><td>currentPage</td><td>当前页码</td><td>number</td><td>—</td><td><code>1</code></td></tr><tr><td>maxPagerCount</td><td>页码按钮的最大数量</td><td>number</td><td>—</td><td><code>7</code></td></tr><tr><td>layout</td><td>分页组件布局</td><td>string</td><td>—</td><td><code>&#39;prev, pager, next&#39;</code></td></tr><tr><td>pageSizes</td><td>每页显示条数的可选值</td><td>number[]</td><td>—</td><td><code>[]</code></td></tr><tr><td>background</td><td>是否为分页按钮添加背景色</td><td>boolean</td><td>—</td><td><code>false</code></td></tr><tr><td>small</td><td>是否使用小型分页样式</td><td>boolean</td><td>—</td><td><code>false</code></td></tr><tr><td>hideOnSinglePage</td><td>是否在只有一页时隐藏分页组件</td><td>boolean</td><td>—</td><td><code>false</code></td></tr><tr><td>disabled</td><td>是否禁用分页组件</td><td>boolean</td><td>—</td><td><code>false</code></td></tr></tbody></table><h3 id="类型定义" tabindex="-1">类型定义 <a class="header-anchor" href="#类型定义" aria-label="Permalink to &quot;类型定义&quot;">​</a></h3><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>interface PaginationProps {</span></span>
<span class="line"><span>  total?: number;</span></span>
<span class="line"><span>  pageSize?: number;</span></span>
<span class="line"><span>  currentPage?: number;</span></span>
<span class="line"><span>  maxPagerCount?: number;</span></span>
<span class="line"><span>  layout?: string;</span></span>
<span class="line"><span>  pageSizes?: number[];</span></span>
<span class="line"><span>  background?: boolean;</span></span>
<span class="line"><span>  small?: boolean;</span></span>
<span class="line"><span>  hideOnSinglePage?: boolean;</span></span>
<span class="line"><span>  disabled?: boolean;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span></code></pre></div>`,5))])}}});export{h as __pageData,q as default};
