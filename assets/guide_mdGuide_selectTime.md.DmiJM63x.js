import{_ as d,C as l,c as i,o as p,af as n,G as o}from"./chunks/framework.Dg2MLihl.js";const g=JSON.parse('{"title":"SelectTime","description":"","frontmatter":{},"headers":[],"relativePath":"guide/mdGuide/selectTime.md","filePath":"guide/mdGuide/selectTime.md"}'),r={name:"guide/mdGuide/selectTime.md"};function c(t,e,m,u,h,_){const s=l("MYSelect-time");return p(),i("div",null,[e[2]||(e[2]=n(`<h1 id="selecttime" tabindex="-1">SelectTime <a class="header-anchor" href="#selecttime" aria-label="Permalink to &quot;SelectTime&quot;">​</a></h1><h2 id="简易介绍" tabindex="-1">简易介绍 <a class="header-anchor" href="#简易介绍" aria-label="Permalink to &quot;简易介绍&quot;">​</a></h2><p>selectTime时间选择器组件，用于用户选择时间或时间范围。mengyue-components进行了封装并进行了vitest测试。<br> 可以使用<code>&lt;MYSelect-time&gt;&lt;/MYSelect-time&gt;</code>或者<code>&lt;MYSelect-time /&gt;</code>来实现一个时间选择器</p><h2 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to &quot;基础用法&quot;">​</a></h2><p>使用<code>v-model</code>绑定时间值。 例如<code>timePoint</code>已经定义过了<code>const timePoint = ref(&#39;00:00&#39;)</code></p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>&lt;MYSelect-time v-model=&quot;timePoint&quot; /&gt;</span></span>
<span class="line"><span></span></span></code></pre></div>`,6)),o(s,{modelValue:t.timePoint,"onUpdate:modelValue":e[0]||(e[0]=a=>t.timePoint=a)},null,8,["modelValue"]),e[3]||(e[3]=n(`<h2 id="选择时间范围" tabindex="-1">选择时间范围 <a class="header-anchor" href="#选择时间范围" aria-label="Permalink to &quot;选择时间范围&quot;">​</a></h2><p>使用<code>range</code>属性可以启用时间范围选择模式。</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>&lt;MYSelect-time v-model=&quot;timeRange&quot; range /&gt;</span></span>
<span class="line"><span></span></span></code></pre></div>`,3)),o(s,{modelValue:t.timeRange,"onUpdate:modelValue":e[1]||(e[1]=a=>t.timeRange=a),range:""},null,8,["modelValue"]),e[4]||(e[4]=n(`<h2 id="api-参考" tabindex="-1">API 参考 <a class="header-anchor" href="#api-参考" aria-label="Permalink to &quot;API 参考&quot;">​</a></h2><h3 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-label="Permalink to &quot;Props&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>range</td><td>是否选择范围</td><td>boolean</td><td>—</td><td><code>false</code></td></tr><tr><td>hourOptions</td><td>小时选项</td><td>number[]</td><td>—</td><td><code>[0-23]</code></td></tr><tr><td>minuteOptions</td><td>分钟选项</td><td>number[]</td><td>—</td><td><code>[0-59]</code></td></tr></tbody></table><h3 id="类型定义" tabindex="-1">类型定义 <a class="header-anchor" href="#类型定义" aria-label="Permalink to &quot;类型定义&quot;">​</a></h3><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>interface SelectTimeProps {</span></span>
<span class="line"><span>  range?: boolean;</span></span>
<span class="line"><span>  hourOptions?: number[];</span></span>
<span class="line"><span>  minuteOptions?: number[];</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span></code></pre></div>`,5))])}const T=d(r,[["render",c]]);export{g as __pageData,T as default};
