import{_ as l}from"./chunks/a.vue_vue_type_script_setup_true_lang.KFLTzssT.js";import{I as r,c as o,o as p,ah as n,J as s,j as i,w as t,a as e}from"./chunks/framework.DHTvsukI.js";import"./chunks/useClassComputed.CEqmS9F9.js";import"./chunks/useStyleComputed.BAeCZWeL.js";const h={style:{display:"flex","flex-direction":"column",gap:"10px"}},k={style:{display:"flex","flex-direction":"column",gap:"10px"}},m={style:{display:"flex","flex-direction":"column",gap:"10px"}},g={style:{display:"flex","flex-direction":"column",gap:"10px"}},Y=JSON.parse('{"title":"A","description":"","frontmatter":{},"headers":[],"relativePath":"components/BasicA.md","filePath":"components/BasicA.md"}'),u={name:"components/BasicA.md"},x=Object.assign(u,{setup(y){return(b,a)=>{const d=r("ShowCode");return p(),o("div",null,[a[16]||(a[16]=n('<h1 id="a" tabindex="-1">A <a class="header-anchor" href="#a" aria-label="Permalink to “A”">​</a></h1><h2 id="简易介绍" tabindex="-1">简易介绍 <a class="header-anchor" href="#简易介绍" aria-label="Permalink to “简易介绍”">​</a></h2><p>a 链接组件，用于显示超链接内容，支持多种样式和交互行为。可以使用 <code>&lt;MYa&gt;&lt;/MYa&gt;</code> 或者 <code>&lt;MYa /&gt;</code> 来实现一个链接组件。</p><h2 id="关于颜色的使用" tabindex="-1">关于颜色的使用 <a class="header-anchor" href="#关于颜色的使用" aria-label="Permalink to “关于颜色的使用”">​</a></h2><h3 id="type" tabindex="-1">type <a class="header-anchor" href="#type" aria-label="Permalink to “type”">​</a></h3><p>在 <code>MYa</code> 中使用 <code>type</code> 可以实现链接的颜色定义，这些颜色是 mengyue-components 提供的基本颜色定义。 例如使用 type 完成下面的颜色定义，如果不写 type 默认是蓝色链接：</p>',6)),s(d,{title:"代码演示",code:`
<template>
  <MYa type='primary'>primary 类型</MYa>
  <MYa type='success'>success 类型</MYa>
  <MYa type='warning'>warning 类型</MYa>
  <MYa type='danger'>danger 类型</MYa>
  <MYa type='info'>info 类型</MYa>
  <MYa>默认类型</MYa>
</template>
  `.trim()},{demo:t(()=>[i("div",h,[s(l,{type:"primary"},{default:t(()=>[...a[0]||(a[0]=[e("primary 类型",-1)])]),_:1}),s(l,{type:"success"},{default:t(()=>[...a[1]||(a[1]=[e("success 类型",-1)])]),_:1}),s(l,{type:"warning"},{default:t(()=>[...a[2]||(a[2]=[e("warning 类型",-1)])]),_:1}),s(l,{type:"danger"},{default:t(()=>[...a[3]||(a[3]=[e("danger 类型",-1)])]),_:1}),s(l,{type:"info"},{default:t(()=>[...a[4]||(a[4]=[e("info 类型",-1)])]),_:1}),s(l,null,{default:t(()=>[...a[5]||(a[5]=[e("默认类型",-1)])]),_:1})])]),_:1},8,["code"]),a[17]||(a[17]=i("h3",{id:"自定义颜色",tabindex:"-1"},[e("自定义颜色 "),i("a",{class:"header-anchor",href:"#自定义颜色","aria-label":"Permalink to “自定义颜色”"},"​")],-1)),a[18]||(a[18]=i("p",null,[e("如果默认颜色不满足需求，还可以自定义颜色，使用 "),i("code",null,"color"),e(" 属性自定义链接颜色。")],-1)),s(d,{title:"代码演示",code:`
<template>
  <MYa color='#ff0000'>自定义红色链接</MYa>
  <MYa color='red'>自定义红色链接</MYa>
</template>
  `.trim()},{demo:t(()=>[i("div",k,[s(l,{color:"#ff0000"},{default:t(()=>[...a[6]||(a[6]=[e("自定义红色链接",-1)])]),_:1}),s(l,{color:"red"},{default:t(()=>[...a[7]||(a[7]=[e("自定义红色链接",-1)])]),_:1})])]),_:1},8,["code"]),a[19]||(a[19]=i("h2",{id:"关于交互行为",tabindex:"-1"},[e("关于交互行为 "),i("a",{class:"header-anchor",href:"#关于交互行为","aria-label":"Permalink to “关于交互行为”"},"​")],-1)),a[20]||(a[20]=i("h3",{id:"disabled",tabindex:"-1"},[e("disabled "),i("a",{class:"header-anchor",href:"#disabled","aria-label":"Permalink to “disabled”"},"​")],-1)),a[21]||(a[21]=i("p",null,[e("使用 "),i("code",null,"disabled"),e(" 属性可以禁用链接。")],-1)),s(d,{title:"代码演示",code:`
<template>
  <MYa disabled>禁用链接</MYa>
</template>
  `.trim()},{demo:t(()=>[s(l,{disabled:""},{default:t(()=>[...a[8]||(a[8]=[e("禁用链接",-1)])]),_:1})]),_:1},8,["code"]),a[22]||(a[22]=i("h3",{id:"underline",tabindex:"-1"},[e("underline "),i("a",{class:"header-anchor",href:"#underline","aria-label":"Permalink to “underline”"},"​")],-1)),a[23]||(a[23]=i("p",null,[e("使用 "),i("code",null,"underline"),e(" 属性可以控制链接下划线的显示。")],-1)),s(d,{title:"代码演示",code:`
<template>
      <MYa underline>不带下划线的链接</MYa>
      <MYa :underline='false'>带下划线的链接</MYa>
</template>
  `.trim()},{demo:t(()=>[i("div",m,[s(l,{underline:""},{default:t(()=>[...a[9]||(a[9]=[e("不带下划线的链接",-1)])]),_:1}),s(l,{underline:!1},{default:t(()=>[...a[10]||(a[10]=[e("带下划线的链接",-1)])]),_:1})])]),_:1},8,["code"]),a[24]||(a[24]=i("h2",{id:"关于尺寸",tabindex:"-1"},[e("关于尺寸 "),i("a",{class:"header-anchor",href:"#关于尺寸","aria-label":"Permalink to “关于尺寸”"},"​")],-1)),a[25]||(a[25]=i("h3",{id:"size",tabindex:"-1"},[e("size "),i("a",{class:"header-anchor",href:"#size","aria-label":"Permalink to “size”"},"​")],-1)),a[26]||(a[26]=i("p",null,[e("使用 "),i("code",null,"size"),e(" 属性可以调整链接大小。")],-1)),s(d,{title:"代码演示",code:`
<template>
  <MYa size='large'>large 尺寸</MYa>
  <MYa size='medium'>medium 尺寸</MYa>
  <MYa size='small'>small 尺寸</MYa>
  <MYa size='mini'>mini 尺寸</MYa>
</template>
  `.trim()},{demo:t(()=>[i("div",g,[s(l,{size:"large"},{default:t(()=>[...a[11]||(a[11]=[e("large 尺寸",-1)])]),_:1}),s(l,{size:"medium"},{default:t(()=>[...a[12]||(a[12]=[e("medium 尺寸",-1)])]),_:1}),s(l,{size:"small"},{default:t(()=>[...a[13]||(a[13]=[e("small 尺寸",-1)])]),_:1}),s(l,{size:"mini"},{default:t(()=>[...a[14]||(a[14]=[e("mini 尺寸",-1)])]),_:1})])]),_:1},8,["code"]),a[27]||(a[27]=i("h3",{id:"组合使用",tabindex:"-1"},[e("组合使用 "),i("a",{class:"header-anchor",href:"#组合使用","aria-label":"Permalink to “组合使用”"},"​")],-1)),a[28]||(a[28]=i("p",null,"最后，实现多种 API 组合使用：",-1)),s(d,{title:"代码演示",code:`
<template>
  <MYa 
    size='large' 
    color='#ff0000' 
    underline
  >
    组合: large + 红色 + 下划线
  </MYa>
</template>
  `.trim()},{demo:t(()=>[s(l,{size:"large",color:"#ff0000",underline:""},{default:t(()=>[...a[15]||(a[15]=[e(" 组合: large + 红色 + 下划线 ",-1)])]),_:1})]),_:1},8,["code"]),a[29]||(a[29]=n(`<p><strong>注意:</strong> 如果使用了 <code>type</code> 属性，请不要在组件上定义 <code>color</code> 属性，不然 <code>color</code> 会覆盖 <code>type</code>，最终生效 <code>color</code> 的配置。</p><h2 id="api-参考" tabindex="-1">API 参考 <a class="header-anchor" href="#api-参考" aria-label="Permalink to “API 参考”">​</a></h2><h3 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-label="Permalink to “Props”">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>type</td><td>链接类型</td><td>string</td><td><code>primary</code>/<code>success</code>/<code>warning</code>/<code>danger</code>/<code>info</code></td><td>—</td></tr><tr><td>color</td><td>颜色</td><td>string</td><td>支持16进制颜色或单词颜色</td><td>—</td></tr><tr><td>disabled</td><td>禁用</td><td>boolean</td><td>—</td><td><code>false</code></td></tr><tr><td>underline</td><td>下划线</td><td>boolean</td><td>—</td><td><code>true</code></td></tr><tr><td>size</td><td>尺寸</td><td>string</td><td><code>mini</code>/<code>small</code>/<code>medium</code>/<code>large</code>/自定义</td><td><code>medium</code></td></tr><tr><td>tag</td><td>渲染标签</td><td>string</td><td>支持所有 HTML 标签</td><td><code>a</code></td></tr></tbody></table><h3 id="类型定义" tabindex="-1">类型定义 <a class="header-anchor" href="#类型定义" aria-label="Permalink to “类型定义”">​</a></h3><div class="language-typescript line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes vitesse-light vitesse-dark" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">interface</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> AProps</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  type</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">?</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: </span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">string</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  color</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">?</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: </span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">string</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  disabled</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">?</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: </span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">boolean</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  underline</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">?</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: </span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">boolean</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  size</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">?</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: </span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">string</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">  tag</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">?</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">: </span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;">string</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div>`,6))])}}});export{Y as __pageData,x as default};
