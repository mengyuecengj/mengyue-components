import{_ as o,C as d,c as i,o as r,af as l,j as p,G as n,w as s,a as e}from"./chunks/framework.B2AMlDzG.js";const q=JSON.parse('{"title":"Button","description":"","frontmatter":{},"headers":[],"relativePath":"guide/mdGuide/button.md","filePath":"guide/mdGuide/button.md"}'),u={name:"guide/mdGuide/button.md"},g={style:{display:"flex",gap:"10px"}},c={style:{display:"flex",gap:"10px"}};function _(b,t,f,T,v,y){const a=d("MYButton");return r(),i("div",null,[t[27]||(t[27]=l(`<h1 id="button" tabindex="-1">Button <a class="header-anchor" href="#button" aria-label="Permalink to &quot;Button&quot;">​</a></h1><h2 id="简易介绍" tabindex="-1">简易介绍 <a class="header-anchor" href="#简易介绍" aria-label="Permalink to &quot;简易介绍&quot;">​</a></h2><p>button按钮，经典交互元素，常用的操作按钮，可以用于表单提交等地方。mengyue-components进行了封装并进行了vitest测试。<br> 可以使用<code>&lt;MYButton&gt;&lt;/MYButton&gt;</code>或者<code>&lt;MYButton /&gt;</code>来实现一个按钮</p><h2 id="关于颜色的使用" tabindex="-1">关于颜色的使用 <a class="header-anchor" href="#关于颜色的使用" aria-label="Permalink to &quot;关于颜色的使用&quot;">​</a></h2><h3 id="type" tabindex="-1">type <a class="header-anchor" href="#type" aria-label="Permalink to &quot;type&quot;">​</a></h3><p>在MYButton中使用type可以实现按钮的颜色定义，这些颜色是mengyue-components提供的基本颜色定义。 例如使用type完成下面的颜色定义,如果不写type默认是透明颜色:</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>&lt;MYButton&gt;Default按钮&lt;/MYButton&gt;</span></span>
<span class="line"><span>&lt;MYButton type=&quot;primary&quot;&gt;primary按钮&lt;/MYButton&gt;</span></span>
<span class="line"><span>&lt;MYButton type=&quot;success&quot;&gt;Success按钮&lt;/MYButton&gt;</span></span>
<span class="line"><span>&lt;MYButton type=&quot;warning&quot;&gt;Warning按钮&lt;/MYButton&gt;</span></span>
<span class="line"><span>&lt;MYButton type=&quot;danger&quot;&gt;Danger按钮&lt;/MYButton&gt;</span></span>
<span class="line"><span>&lt;MYButton type=&quot;info&quot;&gt;Info按钮&lt;/MYButton&gt;</span></span>
<span class="line"><span></span></span></code></pre></div>`,7)),p("div",g,[n(a,null,{default:s(()=>[...t[0]||(t[0]=[e("Default按钮",-1)])]),_:1}),n(a,{type:"primary"},{default:s(()=>[...t[1]||(t[1]=[e("primary按钮",-1)])]),_:1}),n(a,{type:"success"},{default:s(()=>[...t[2]||(t[2]=[e("Success按钮",-1)])]),_:1}),n(a,{type:"warning"},{default:s(()=>[...t[3]||(t[3]=[e("Warning按钮",-1)])]),_:1}),n(a,{type:"danger"},{default:s(()=>[...t[4]||(t[4]=[e("Danger按钮",-1)])]),_:1}),n(a,{type:"info"},{default:s(()=>[...t[5]||(t[5]=[e("Info按钮",-1)])]),_:1})]),t[28]||(t[28]=l(`<h3 id="自定义颜色" tabindex="-1">自定义颜色 <a class="header-anchor" href="#自定义颜色" aria-label="Permalink to &quot;自定义颜色&quot;">​</a></h3><p>当然，如果上面的颜色不满足需求，还可以自定义颜色，使用colorBg自定义按钮背景颜色 例如这里使用红色背景：</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>&lt;MYButton colorBg=&quot;#ff0000&quot;&gt;自定义红色背景按钮&lt;/MYButton&gt;</span></span>
<span class="line"><span></span></span></code></pre></div>`,3)),n(a,{colorBg:"#ff0000"},{default:s(()=>[...t[6]||(t[6]=[e("自定义红色背景按钮",-1)])]),_:1}),t[29]||(t[29]=l(`<p>当然也支持下面这种方式来自定义背景颜色</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>&lt;MYButton colorBg=&quot;red&quot;&gt;自定义红色背景按钮&lt;/MYButton&gt;</span></span>
<span class="line"><span></span></span></code></pre></div>`,2)),n(a,{colorBg:"red"},{default:s(()=>[...t[7]||(t[7]=[e("自定义红色背景按钮",-1)])]),_:1}),t[30]||(t[30]=l(`<h3 id="自定义文本颜色" tabindex="-1">自定义文本颜色 <a class="header-anchor" href="#自定义文本颜色" aria-label="Permalink to &quot;自定义文本颜色&quot;">​</a></h3><p>也可以自定义文本颜色，这里使用colorText自定义按钮文字颜色</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>&lt;MYButton colorText=&quot;#ff0000&quot;&gt;自定义红色文本按钮&lt;/MYButton&gt;</span></span>
<span class="line"><span></span></span></code></pre></div>`,3)),n(a,{colorText:"#ff0000"},{default:s(()=>[...t[8]||(t[8]=[e("自定义红色文本按钮",-1)])]),_:1}),t[31]||(t[31]=l(`<p>当然也支持下面这种方式来自定义文字颜色</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>&lt;MYButton colorText=&quot;red&quot;&gt;自定义红色背景按钮&lt;/MYButton&gt;</span></span>
<span class="line"><span></span></span></code></pre></div>`,2)),n(a,{colorText:"red"},{default:s(()=>[...t[9]||(t[9]=[e("自定义红色背景按钮",-1)])]),_:1}),t[32]||(t[32]=l(`<h3 id="自定义边框颜色" tabindex="-1">自定义边框颜色 <a class="header-anchor" href="#自定义边框颜色" aria-label="Permalink to &quot;自定义边框颜色&quot;">​</a></h3><p>自定义按钮边框颜色，这里使用colorBorder自定义按钮边框颜色</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>&lt;MYButton colorBorder=&quot;#FF7F50&quot;&gt;自定义珊瑚色边框按钮&lt;/MYButton&gt;</span></span>
<span class="line"><span></span></span></code></pre></div>`,3)),n(a,{colorBorder:"#FF7F50"},{default:s(()=>[...t[10]||(t[10]=[e("自定义珊瑚色边框按钮",-1)])]),_:1}),t[33]||(t[33]=l(`<p>当然也支持下面这种方式来自定义边框颜色</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>&lt;MYButton colorBorder=&quot;#FF7F50&quot;&gt;自定义珊瑚色边框按钮&lt;/MYButton&gt;</span></span>
<span class="line"><span></span></span></code></pre></div>`,2)),n(a,{colorBorder:"#FF7F50"},{default:s(()=>[...t[11]||(t[11]=[e("自定义珊瑚色边框按钮",-1)])]),_:1}),t[34]||(t[34]=l(`<h3 id="plain" tabindex="-1">plain <a class="header-anchor" href="#plain" aria-label="Permalink to &quot;plain&quot;">​</a></h3><p>使用plain属性可以把按钮渲染为透明样式，配合上面的自定义颜色实现不一样的样式</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>&lt;MYButton plain&gt;Default按钮&lt;/MYButton&gt;</span></span>
<span class="line"><span>&lt;MYButton type=&quot;primary&quot; plain&gt;primary按钮&lt;/MYButton&gt;</span></span>
<span class="line"><span>&lt;MYButton type=&quot;success&quot; plain&gt;Success按钮&lt;/MYButton&gt;</span></span>
<span class="line"><span>&lt;MYButton type=&quot;warning&quot; plain&gt;Warning按钮&lt;/MYButton&gt;</span></span>
<span class="line"><span>&lt;MYButton type=&quot;danger&quot; plain&gt;Danger按钮&lt;/MYButton&gt;</span></span>
<span class="line"><span>&lt;MYButton type=&quot;info&quot; plain&gt;Info按钮&lt;/MYButton&gt;</span></span>
<span class="line"><span></span></span></code></pre></div><p>运行后的效果</p>`,4)),p("div",c,[n(a,{plain:""},{default:s(()=>[...t[12]||(t[12]=[e("Default按钮",-1)])]),_:1}),n(a,{type:"primary",plain:""},{default:s(()=>[...t[13]||(t[13]=[e("primary按钮",-1)])]),_:1}),n(a,{type:"success",plain:""},{default:s(()=>[...t[14]||(t[14]=[e("Success按钮",-1)])]),_:1}),n(a,{type:"warning",plain:""},{default:s(()=>[...t[15]||(t[15]=[e("Warning按钮",-1)])]),_:1}),n(a,{type:"danger",plain:""},{default:s(()=>[...t[16]||(t[16]=[e("Danger按钮",-1)])]),_:1}),n(a,{type:"info",plain:""},{default:s(()=>[...t[17]||(t[17]=[e("Info按钮",-1)])]),_:1})]),t[35]||(t[35]=l(`<h2 id="关于圆角" tabindex="-1">关于圆角 <a class="header-anchor" href="#关于圆角" aria-label="Permalink to &quot;关于圆角&quot;">​</a></h2><h3 id="round" tabindex="-1">round <a class="header-anchor" href="#round" aria-label="Permalink to &quot;round&quot;">​</a></h3><p>使用round可以把按钮变成圆角</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>&lt;MYButton round&gt;Default按钮&lt;/MYButton&gt;</span></span>
<span class="line"><span></span></span></code></pre></div>`,4)),n(a,{round:""},{default:s(()=>[...t[18]||(t[18]=[e("Default按钮",-1)])]),_:1}),t[36]||(t[36]=l(`<h3 id="circle" tabindex="-1">circle <a class="header-anchor" href="#circle" aria-label="Permalink to &quot;circle&quot;">​</a></h3><p>使用circle可以把按钮变成圆形</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>&lt;MYButton circle&gt;A&lt;/MYButton&gt;</span></span>
<span class="line"><span></span></span></code></pre></div>`,3)),n(a,{circle:""},{default:s(()=>[...t[19]||(t[19]=[e("A",-1)])]),_:1}),t[37]||(t[37]=l(`<h2 id="关于尺寸" tabindex="-1">关于尺寸 <a class="header-anchor" href="#关于尺寸" aria-label="Permalink to &quot;关于尺寸&quot;">​</a></h2><h3 id="size" tabindex="-1">size <a class="header-anchor" href="#size" aria-label="Permalink to &quot;size&quot;">​</a></h3><p>使用size属性可以调整按钮大小</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>&lt;MYButton size=&quot;supersmall&quot;&gt;supersmall按钮&lt;/MYButton&gt;</span></span>
<span class="line"><span>&lt;MYButton size=&quot;small&quot;&gt;small按钮&lt;/MYButton&gt;</span></span>
<span class="line"><span>&lt;MYButton size=&quot;medium&quot;&gt;medium按钮&lt;/MYButton&gt;</span></span>
<span class="line"><span>&lt;MYButton size=&quot;large&quot;&gt;large按钮&lt;/MYButton&gt;</span></span>
<span class="line"><span>&lt;MYButton size=&quot;superbig&quot;&gt;superbig按钮&lt;/MYButton&gt;</span></span>
<span class="line"><span></span></span></code></pre></div><p>运行后的效果</p>`,5)),n(a,{size:"supersmall"},{default:s(()=>[...t[20]||(t[20]=[e("supersmall按钮",-1)])]),_:1}),n(a,{size:"small"},{default:s(()=>[...t[21]||(t[21]=[e("small按钮",-1)])]),_:1}),n(a,{size:"medium"},{default:s(()=>[...t[22]||(t[22]=[e("medium按钮",-1)])]),_:1}),n(a,{size:"large"},{default:s(()=>[...t[23]||(t[23]=[e("large按钮",-1)])]),_:1}),n(a,{size:"superbig"},{default:s(()=>[...t[24]||(t[24]=[e("superbig按钮",-1)])]),_:1}),t[38]||(t[38]=l(`<h2 id="disabled" tabindex="-1">disabled <a class="header-anchor" href="#disabled" aria-label="Permalink to &quot;disabled&quot;">​</a></h2><p>使用disabled来禁用按钮</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>&lt;MYButton disabled&gt;禁用按钮&lt;/MYButton&gt;</span></span>
<span class="line"><span></span></span></code></pre></div>`,3)),n(a,{disabled:""},{default:s(()=>[...t[25]||(t[25]=[e("禁用按钮",-1)])]),_:1}),t[39]||(t[39]=l(`<p>最后，下面为多种进行组合使用：</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>&lt;MYButton</span></span>
<span class="line"><span>    size=&quot;superbig&quot;</span></span>
<span class="line"><span>    round</span></span>
<span class="line"><span>    plain</span></span>
<span class="line"><span>    colorBorder=&quot;#FF7F50&quot;</span></span>
<span class="line"><span>    colorBg=&quot;#8d4dd1&quot;</span></span>
<span class="line"><span>    colorText=&quot;red&quot;</span></span>
<span class="line"><span>&gt;组合按钮&lt;/MYButton&gt;</span></span>
<span class="line"><span></span></span></code></pre></div>`,2)),n(a,{size:"superbig",round:"",plain:"",colorBorder:"#FF7F50",colorBg:"#8d4dd1",colorText:"red"},{default:s(()=>[...t[26]||(t[26]=[e("组合按钮",-1)])]),_:1}),t[40]||(t[40]=l(`<h2 id="api-参考" tabindex="-1">API 参考 <a class="header-anchor" href="#api-参考" aria-label="Permalink to &quot;API 参考&quot;">​</a></h2><h3 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-label="Permalink to &quot;Props&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>type</td><td>按钮类型</td><td>string</td><td>primary/success/warning/danger/info</td><td>—</td></tr><tr><td>size</td><td>按钮尺寸</td><td>string</td><td>supersmall/small/medium/large/superbig</td><td><code>medium</code></td></tr><tr><td>plain</td><td>是否为朴素按钮</td><td>boolean</td><td>—</td><td><code>false</code></td></tr><tr><td>round</td><td>是否为圆角按钮</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>circle</td><td>是否为圆形按钮</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>disabled</td><td>是否禁用</td><td>boolean</td><td>—</td><td>false</td></tr><tr><td>colorBg</td><td>背景色</td><td>string</td><td>支持16进制颜色或单词颜色</td><td>—</td></tr><tr><td>colorText</td><td>文字颜色</td><td>string</td><td>—</td><td><code>false</code></td></tr><tr><td>colorBorder</td><td>边框颜色</td><td>string</td><td>支持16进制颜色或单词颜色</td><td>—</td></tr><tr><td>tag</td><td>渲染标签</td><td>string</td><td>持所有 HTML 标签</td><td>button</td></tr></tbody></table><h3 id="类型定义" tabindex="-1">类型定义 <a class="header-anchor" href="#类型定义" aria-label="Permalink to &quot;类型定义&quot;">​</a></h3><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>interface ButtonProps {</span></span>
<span class="line"><span>  type?: string;</span></span>
<span class="line"><span>  size?: string;</span></span>
<span class="line"><span>  plain?: boolean;</span></span>
<span class="line"><span>  round?: boolean;</span></span>
<span class="line"><span>  circle?: boolean;</span></span>
<span class="line"><span>  disabled?: boolean;</span></span>
<span class="line"><span>  colorBg?: string;</span></span>
<span class="line"><span>  colorText?: string;</span></span>
<span class="line"><span>  colorBorder?: string;</span></span>
<span class="line"><span>  tag?: string;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span></code></pre></div>`,5))])}const m=o(u,[["render",_]]);export{q as __pageData,m as default};
