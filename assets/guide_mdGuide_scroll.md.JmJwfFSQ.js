import{_ as t,c as s,o,af as l}from"./chunks/framework.2Q75SVZZ.js";const u=JSON.parse('{"title":"Scroll","description":"","frontmatter":{},"headers":[],"relativePath":"guide/mdGuide/scroll.md","filePath":"guide/mdGuide/scroll.md"}'),e={name:"guide/mdGuide/scroll.md"};function n(r,a,d,c,p,i){return o(),s("div",null,a[0]||(a[0]=[l(`<h1 id="scroll" tabindex="-1">Scroll <a class="header-anchor" href="#scroll" aria-label="Permalink to &quot;Scroll&quot;">​</a></h1><h2 id="简易介绍" tabindex="-1">简易介绍 <a class="header-anchor" href="#简易介绍" aria-label="Permalink to &quot;简易介绍&quot;">​</a></h2><p>scroll 滚动条组件，用于实现自定义滚动条样式和功能。mengyue-components 对其进行了封装并进行了 vitest 测试。<br> 可以使用 <code>&lt;MYScroll&gt;&lt;/MYScroll&gt;</code> 或者 <code>&lt;MYScroll /&gt;</code> 来实现一个自定义滚动条。 这个样式会改变全局滚动条，所以暂时不做示例展示，直接可以参考 API 部分。</p><h2 id="关于颜色的使用" tabindex="-1">关于颜色的使用 <a class="header-anchor" href="#关于颜色的使用" aria-label="Permalink to &quot;关于颜色的使用&quot;">​</a></h2><h3 id="thumbcolor" tabindex="-1">thumbColor <a class="header-anchor" href="#thumbcolor" aria-label="Permalink to &quot;thumbColor&quot;">​</a></h3><p>在 <code>MYScroll</code> 中使用 <code>thumbColor</code> 可以定义滚动条滑块的颜色。 例如：</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>&lt;MYScroll thumbColor=&quot;#ff0000&quot;&gt;自定义红色滑块滚动条&lt;/MYScroll&gt;</span></span>
<span class="line"><span></span></span></code></pre></div><h3 id="thumbhovercolor" tabindex="-1">thumbHoverColor <a class="header-anchor" href="#thumbhovercolor" aria-label="Permalink to &quot;thumbHoverColor&quot;">​</a></h3><p>使用 <code>thumbHoverColor</code> 可以定义滑块在悬停时的颜色。 例如：</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>&lt;MYScroll thumbHoverColor=&quot;#00ff00&quot;&gt;悬停时绿色滑块滚动条&lt;/MYScroll&gt;</span></span>
<span class="line"><span></span></span></code></pre></div><h3 id="trackcolor" tabindex="-1">trackColor <a class="header-anchor" href="#trackcolor" aria-label="Permalink to &quot;trackColor&quot;">​</a></h3><p>使用 <code>trackColor</code> 可以定义滚动条轨道的颜色。 例如：</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>&lt;MYScroll trackColor=&quot;#0000ff&quot;&gt;蓝色轨道滚动条&lt;/MYScroll&gt;</span></span>
<span class="line"><span></span></span></code></pre></div><h2 id="关于尺寸" tabindex="-1">关于尺寸 <a class="header-anchor" href="#关于尺寸" aria-label="Permalink to &quot;关于尺寸&quot;">​</a></h2><h3 id="width" tabindex="-1">width <a class="header-anchor" href="#width" aria-label="Permalink to &quot;width&quot;">​</a></h3><p>使用 <code>width</code> 可以定义滚动条的宽度。 例如：</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>&lt;MYScroll width=&quot;10px&quot;&gt;宽度为 10px 的滚动条&lt;/MYScroll&gt;</span></span>
<span class="line"><span></span></span></code></pre></div><h2 id="api-参考" tabindex="-1">API 参考 <a class="header-anchor" href="#api-参考" aria-label="Permalink to &quot;API 参考&quot;">​</a></h2><h3 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-label="Permalink to &quot;Props&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>thumbColor</td><td>滑块颜色</td><td>string</td><td>支持16进制颜色或单词颜色</td><td>—</td></tr><tr><td>thumbHoverColor</td><td>滑块悬停颜色</td><td>string</td><td>支持16进制颜色或单词颜色</td><td>—</td></tr><tr><td>trackColor</td><td>轨道颜色</td><td>string</td><td>支持16进制颜色或单词颜色</td><td>—</td></tr><tr><td>width</td><td>滚动条宽度</td><td>string</td><td>支持 CSS 宽度单位（如 px, em）</td><td>—</td></tr><tr><td>tag</td><td>容器标签</td><td>string</td><td>支持所有 HTML 标签</td><td><code>div</code></td></tr></tbody></table><h3 id="类型定义" tabindex="-1">类型定义 <a class="header-anchor" href="#类型定义" aria-label="Permalink to &quot;类型定义&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span style="color:#81A1C1;">interface</span><span style="color:#8FBCBB;"> ScrollProps</span><span style="color:#ECEFF4;"> {</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  thumbColor</span><span style="color:#81A1C1;">?:</span><span style="color:#8FBCBB;"> string</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  thumbHoverColor</span><span style="color:#81A1C1;">?:</span><span style="color:#8FBCBB;"> string</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  trackColor</span><span style="color:#81A1C1;">?:</span><span style="color:#8FBCBB;"> string</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  width</span><span style="color:#81A1C1;">?:</span><span style="color:#8FBCBB;"> string</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#D8DEE9FF;">  tag</span><span style="color:#81A1C1;">?:</span><span style="color:#8FBCBB;"> string</span><span style="color:#81A1C1;">;</span></span>
<span class="line"><span style="color:#ECEFF4;">}</span></span>
<span class="line"></span></code></pre></div>`,22)]))}const b=t(e,[["render",n]]);export{u as __pageData,b as default};
