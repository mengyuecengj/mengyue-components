import{_ as n,C as d,c as r,o as p,af as l,G as s}from"./chunks/framework.B2AMlDzG.js";const v=JSON.parse('{"title":"PickColor","description":"","frontmatter":{},"headers":[],"relativePath":"guide/mdGuide/pickColor.md","filePath":"guide/mdGuide/pickColor.md"}'),i={name:"guide/mdGuide/pickColor.md"};function c(a,e,u,b,h,m){const t=d("MYSelect-color");return p(),r("div",null,[e[5]||(e[5]=l(`<h1 id="pickcolor" tabindex="-1">PickColor <a class="header-anchor" href="#pickcolor" aria-label="Permalink to &quot;PickColor&quot;">​</a></h1><h2 id="简易介绍" tabindex="-1">简易介绍 <a class="header-anchor" href="#简易介绍" aria-label="Permalink to &quot;简易介绍&quot;">​</a></h2><p>pickColor颜色选择器组件，用于用户选择颜色。mengyue-components进行了封装并进行了vitest测试。<br> 可以使用<code>&lt;MYSelect-color&gt;&lt;/MYSelect-color&gt;</code>或者<code>&lt;MYSelect-color /&gt;</code>来实现一个颜色选择器</p><h2 id="基础用法" tabindex="-1">基础用法 <a class="header-anchor" href="#基础用法" aria-label="Permalink to &quot;基础用法&quot;">​</a></h2><p>使用<code>v-model</code>绑定颜色值，默认颜色为黑色（<code>#000000</code>）。</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>&lt;MYSelect-color v-model=&quot;color1&quot; /&gt;</span></span>
<span class="line"><span></span></span></code></pre></div>`,6)),s(t,{modelValue:a.color1,"onUpdate:modelValue":e[0]||(e[0]=o=>a.color1=o)},null,8,["modelValue"]),e[6]||(e[6]=l(`<h2 id="自定义尺寸" tabindex="-1">自定义尺寸 <a class="header-anchor" href="#自定义尺寸" aria-label="Permalink to &quot;自定义尺寸&quot;">​</a></h2><p>使用<code>size</code>属性可以自定义颜色选择器的尺寸。</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>&lt;MYSelect-color v-model=&quot;colorValue&quot; size=&quot;200px&quot; /&gt;</span></span>
<span class="line"><span></span></span></code></pre></div>`,3)),s(t,{modelValue:a.color1,"onUpdate:modelValue":e[1]||(e[1]=o=>a.color1=o),size:"200px"},null,8,["modelValue"]),e[7]||(e[7]=l(`<h2 id="透明度控制" tabindex="-1">透明度控制 <a class="header-anchor" href="#透明度控制" aria-label="Permalink to &quot;透明度控制&quot;">​</a></h2><p>使用<code>rgba</code>属性可以控制颜色的透明度（0-1之间的值）。</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>&lt;MYSelect-color v-model=&quot;colorValue&quot; :rgba=&quot;0.5&quot; /&gt;</span></span>
<span class="line"><span></span></span></code></pre></div>`,3)),s(t,{modelValue:a.colorValue,"onUpdate:modelValue":e[2]||(e[2]=o=>a.colorValue=o),rgba:.5},null,8,["modelValue"]),e[8]||(e[8]=l(`<h2 id="无边框模式" tabindex="-1">无边框模式 <a class="header-anchor" href="#无边框模式" aria-label="Permalink to &quot;无边框模式&quot;">​</a></h2><p>使用<code>noBorder</code>属性可以隐藏边框。</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>&lt;MYSelect-color v-model=&quot;colorValue&quot; no-border /&gt;</span></span>
<span class="line"><span></span></span></code></pre></div>`,3)),s(t,{modelValue:a.colorValue,"onUpdate:modelValue":e[3]||(e[3]=o=>a.colorValue=o),"no-border":""},null,8,["modelValue"]),e[9]||(e[9]=l(`<h2 id="圆形模式" tabindex="-1">圆形模式 <a class="header-anchor" href="#圆形模式" aria-label="Permalink to &quot;圆形模式&quot;">​</a></h2><p>使用<code>circle</code>属性可以将颜色选择器显示为圆形。</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>&lt;MYSelect-color v-model=&quot;colorValue&quot; circle /&gt;</span></span>
<span class="line"><span></span></span></code></pre></div>`,3)),s(t,{modelValue:a.colorValue,"onUpdate:modelValue":e[4]||(e[4]=o=>a.colorValue=o),circle:""},null,8,["modelValue"]),e[10]||(e[10]=l(`<h2 id="api-参考" tabindex="-1">API 参考 <a class="header-anchor" href="#api-参考" aria-label="Permalink to &quot;API 参考&quot;">​</a></h2><h3 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-label="Permalink to &quot;Props&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>size</td><td>尺寸</td><td>string</td><td>—</td><td><code>50px</code></td></tr><tr><td>rgba</td><td>透明度</td><td>string | number</td><td>0-1之间的值</td><td><code>1</code></td></tr><tr><td>noBorder</td><td>是否隐藏边框</td><td>boolean</td><td>—</td><td><code>false</code></td></tr><tr><td>circle</td><td>是否显示为圆形</td><td>boolean</td><td>—</td><td><code>false</code></td></tr></tbody></table><h3 id="类型定义" tabindex="-1">类型定义 <a class="header-anchor" href="#类型定义" aria-label="Permalink to &quot;类型定义&quot;">​</a></h3><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>interface PickColorProps {</span></span>
<span class="line"><span>  size?: string;</span></span>
<span class="line"><span>  rgba?: string | number;</span></span>
<span class="line"><span>  noBorder?: boolean;</span></span>
<span class="line"><span>  circle?: boolean;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span></code></pre></div>`,5))])}const g=n(i,[["render",c]]);export{v as __pageData,g as default};
