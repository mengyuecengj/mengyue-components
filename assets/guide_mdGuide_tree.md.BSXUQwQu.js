import{C as o,c as l,o as r,af as t,G as i}from"./chunks/framework.D6WQP5md.js";const u=JSON.parse('{"title":"Tree","description":"","frontmatter":{},"headers":[],"relativePath":"guide/mdGuide/tree.md","filePath":"guide/mdGuide/tree.md"}'),p={name:"guide/mdGuide/tree.md"},b=Object.assign(p,{setup(c){const a=[{label:"🌲 根节点 1",id:"1",children:[{label:"📁 子节点 1-1",id:"1-1"},{label:"📁 子节点 1-2",id:"1-2",children:[{label:"📄 子节点 1-2-1",id:"1-2-1"}]}]},{label:"🌲 根节点 2",id:"2"}],d={children:"children",label:"label"};return(s,e)=>{const n=o("MYTree");return r(),l("div",null,[e[0]||(e[0]=t(`<h1 id="tree" tabindex="-1">Tree <a class="header-anchor" href="#tree" aria-label="Permalink to &quot;Tree&quot;">​</a></h1><h2 id="简易介绍" tabindex="-1">简易介绍 <a class="header-anchor" href="#简易介绍" aria-label="Permalink to &quot;简易介绍&quot;">​</a></h2><p>Tree 树形组件，用于展示层级结构的数据。mengyue-components 进行了封装并进行了 vitest 测试。<br> 可以使用 <code>&lt;MYTree&gt;&lt;/MYTree&gt;</code> 或者 <code>&lt;MYTree /&gt;</code>来实现一个树形组件。</p><h2 id="树形菜单用法" tabindex="-1">树形菜单用法 <a class="header-anchor" href="#树形菜单用法" aria-label="Permalink to &quot;树形菜单用法&quot;">​</a></h2><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>&lt;MYTree :data=&quot;testData&quot; :props=&quot;testProps&quot; @node-click=&quot;handleNodeClick&quot; /&gt;</span></span>
<span class="line"><span></span></span></code></pre></div>`,5)),i(n,{data:a,props:d,onNodeClick:s.handleNodeClick},null,8,["onNodeClick"]),e[1]||(e[1]=t(`<h2 id="api-参考" tabindex="-1">API 参考 <a class="header-anchor" href="#api-参考" aria-label="Permalink to &quot;API 参考&quot;">​</a></h2><h3 id="props" tabindex="-1">Props <a class="header-anchor" href="#props" aria-label="Permalink to &quot;Props&quot;">​</a></h3><table tabindex="0"><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>data</td><td>树形结构数据</td><td>TreeNodes[]</td><td>—</td><td><code>[]</code></td></tr><tr><td>props</td><td>字段映射配置</td><td>TreeProps</td><td>—</td><td><code>{}</code></td></tr></tbody></table><h3 id="events" tabindex="-1">Events <a class="header-anchor" href="#events" aria-label="Permalink to &quot;Events&quot;">​</a></h3><table tabindex="0"><thead><tr><th>事件名</th><th>说明</th><th>回调参数</th></tr></thead><tbody><tr><td>node-click</td><td>节点点击事件</td><td>(node: TreeNodes) =&gt; void</td></tr></tbody></table><h3 id="类型定义" tabindex="-1">类型定义 <a class="header-anchor" href="#类型定义" aria-label="Permalink to &quot;类型定义&quot;">​</a></h3><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki nord" style="color:#d8dee9ff;" tabindex="0"><code><span class="line"><span>interface TreeProps {</span></span>
<span class="line"><span>  label?: string;</span></span>
<span class="line"><span>  children?: string;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span></code></pre></div>`,7))])}}});export{u as __pageData,b as default};
